#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SP_EmotesPlusQC

#include "Basic.hpp"

#include "SP_EmotesPlusQC_classes.hpp"
#include "SP_EmotesPlusQC_parameters.hpp"


namespace SDK
{

// Function SP_Emotes+QC.SP_Emotes+QC_C.ExecuteUbergraph_SP_Emotes+QC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USP_EmotesPlusQC_C::ExecuteUbergraph_SP_EmotesPlusQC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "ExecuteUbergraph_SP_Emotes+QC");

	Params::SP_EmotesPlusQC_C_ExecuteUbergraph_SP_EmotesPlusQC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP_Emotes+QC.SP_Emotes+QC_C.TimerEvent
// (BlueprintCallable, BlueprintEvent)

void USP_EmotesPlusQC_C::TimerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "TimerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SP_Emotes+QC.SP_Emotes+QC_C.StartTimer
// (BlueprintCallable, BlueprintEvent)

void USP_EmotesPlusQC_C::StartTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "StartTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SP_Emotes+QC.SP_Emotes+QC_C.SetQuickChatOptions
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USP_EmotesPlusQC_C::SetQuickChatOptions(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "SetQuickChatOptions");

	Params::SP_EmotesPlusQC_C_SetQuickChatOptions Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP_Emotes+QC.SP_Emotes+QC_C.EnterQuickChatMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USP_EmotesPlusQC_C::EnterQuickChatMode(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "EnterQuickChatMode");

	Params::SP_EmotesPlusQC_C_EnterQuickChatMode Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SP_Emotes+QC.SP_Emotes+QC_C.EnterEmoteMode
// (BlueprintCallable, BlueprintEvent)

void USP_EmotesPlusQC_C::EnterEmoteMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "EnterEmoteMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SP_Emotes+QC.SP_Emotes+QC_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void USP_EmotesPlusQC_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SP_Emotes+QC_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}

}

