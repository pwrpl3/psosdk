#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FunctionLibrary

#include "Basic.hpp"

#include "BP_FunctionLibrary_classes.hpp"
#include "BP_FunctionLibrary_parameters.hpp"


namespace SDK
{

// Function BP_FunctionLibrary.BP_FunctionLibrary_C.TimeAsString
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Time                                                   (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::TimeAsString(class UObject* __WorldContext, class FString* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_FunctionLibrary_C", "TimeAsString");

	Params::BP_FunctionLibrary_C_TimeAsString Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = std::move(Parms.Time);
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.CalculatePlayerLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   TotalXP                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PlayerLevel_Out                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RemainingXP_Out                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   PreviousLevelXP_Out                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NextLevelXP_Out                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   LevelCompleted__Out                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::CalculatePlayerLevel(int32 TotalXP, class UObject* __WorldContext, int32* PlayerLevel_Out, int32* RemainingXP_Out, int32* PreviousLevelXP_Out, int32* NextLevelXP_Out, float* LevelCompleted__Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FunctionLibrary_C", "CalculatePlayerLevel");

	Params::BP_FunctionLibrary_C_CalculatePlayerLevel Parms{};

	Parms.TotalXP = TotalXP;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerLevel_Out != nullptr)
		*PlayerLevel_Out = Parms.PlayerLevel_Out;

	if (RemainingXP_Out != nullptr)
		*RemainingXP_Out = Parms.RemainingXP_Out;

	if (PreviousLevelXP_Out != nullptr)
		*PreviousLevelXP_Out = Parms.PreviousLevelXP_Out;

	if (NextLevelXP_Out != nullptr)
		*NextLevelXP_Out = Parms.NextLevelXP_Out;

	if (LevelCompleted__Out != nullptr)
		*LevelCompleted__Out = Parms.LevelCompleted__Out;
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.CalculatePlayerOverallRating
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PlayersRank_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TotalEntries                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OverallRating                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::CalculatePlayerOverallRating(int32 PlayersRank_, int32 TotalEntries, class UObject* __WorldContext, int32* OverallRating)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FunctionLibrary_C", "CalculatePlayerOverallRating");

	Params::BP_FunctionLibrary_C_CalculatePlayerOverallRating Parms{};

	Parms.PlayersRank_ = PlayersRank_;
	Parms.TotalEntries = TotalEntries;
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (OverallRating != nullptr)
		*OverallRating = Parms.OverallRating;
}


// Function BP_FunctionLibrary.BP_FunctionLibrary_C.CheckStringProfanity
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InputMessage                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           OutputMessage                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_FunctionLibrary_C::CheckStringProfanity(const class FString& InputMessage, class UObject* __WorldContext, class FString* OutputMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_FunctionLibrary_C", "CheckStringProfanity");

	Params::BP_FunctionLibrary_C_CheckStringProfanity Parms{};

	Parms.InputMessage = std::move(InputMessage);
	Parms.__WorldContext = __WorldContext;

	UObject::ProcessEvent(Func, &Parms);

	if (OutputMessage != nullptr)
		*OutputMessage = std::move(Parms.OutputMessage);
}

}

