#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoccerBall

#include "Basic.hpp"

#include "SoccerBall_classes.hpp"
#include "SoccerBall_parameters.hpp"


namespace SDK
{

// Function SoccerBall.SoccerBall_C.ExecuteUbergraph_SoccerBall
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::ExecuteUbergraph_SoccerBall(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "ExecuteUbergraph_SoccerBall");

	Params::SoccerBall_C_ExecuteUbergraph_SoccerBall Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Set_ShotPostHitCoolDown
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_ShotPostHitCoolDown                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASoccerBall_C::Set_ShotPostHitCoolDown(bool Param_ShotPostHitCoolDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Set_ShotPostHitCoolDown");

	Params::SoccerBall_C_Set_ShotPostHitCoolDown Parms{};

	Parms.Param_ShotPostHitCoolDown = Param_ShotPostHitCoolDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.BndEvt__SoccerBall_SoccerBall_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ASoccerBall_C::BndEvt__SoccerBall_SoccerBall_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "BndEvt__SoccerBall_SoccerBall_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::SoccerBall_C_BndEvt__SoccerBall_SoccerBall_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Set_AwaitingThrowIn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_AwaitingThrowIn                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASoccerBall_C::Set_AwaitingThrowIn(bool Param_AwaitingThrowIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Set_AwaitingThrowIn");

	Params::SoccerBall_C_Set_AwaitingThrowIn Parms{};

	Parms.Param_AwaitingThrowIn = Param_AwaitingThrowIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Perry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Perry_0(class ASP_Character_C* SP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Perry");

	Params::SoccerBall_C_Perry Parms{};

	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.UpdateBallHalo
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HaloSize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::UpdateBallHalo(int32 HaloSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "UpdateBallHalo");

	Params::SoccerBall_C_UpdateBallHalo Parms{};

	Parms.HaloSize = HaloSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.SetBallDesign
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASoccerBall_C::SetBallDesign()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "SetBallDesign");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.ThrowIn_CalculatePossession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PossessingTeam                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASP_Character_C*                  SetPieceTaker                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::ThrowIn_CalculatePossession(int32 PossessingTeam, class ASP_Character_C* SetPieceTaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "ThrowIn_CalculatePossession");

	Params::SoccerBall_C_ThrowIn_CalculatePossession Parms{};

	Parms.PossessingTeam = PossessingTeam;
	Parms.SetPieceTaker = SetPieceTaker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.StopCurve
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ASoccerBall_C::StopCurve()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "StopCurve");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.Call_CalculatePossession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckOffside_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   HitType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Call_CalculatePossession(class ASP_Character_C* SP_Character, bool CheckOffside_, int32 HitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Call_CalculatePossession");

	Params::SoccerBall_C_Call_CalculatePossession Parms{};

	Parms.SP_Character = SP_Character;
	Parms.CheckOffside_ = CheckOffside_;
	Parms.HitType = HitType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Gk_PerryImpulse
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Kick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Gk_PerryImpulse(const struct FVector& Param_Kick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Gk_PerryImpulse");

	Params::SoccerBall_C_Gk_PerryImpulse Parms{};

	Parms.Param_Kick = std::move(Param_Kick);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.ThrowInPickUp
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::ThrowInPickUp(class ASP_Character_C* SP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "ThrowInPickUp");

	Params::SoccerBall_C_ThrowInPickUp Parms{};

	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Set_PlacingBall
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_PlacingBall                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASoccerBall_C::Set_PlacingBall(bool Param_PlacingBall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Set_PlacingBall");

	Params::SoccerBall_C_Set_PlacingBall Parms{};

	Parms.Param_PlacingBall = Param_PlacingBall;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Kick_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FVector                          Param_Kick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Kick_All(class UPrimitiveComponent* Target, const struct FVector& Param_Kick)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Kick_All");

	Params::SoccerBall_C_Kick_All Parms{};

	Parms.Target = Target;
	Parms.Param_Kick = std::move(Param_Kick);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.ClampVelocity
// (BlueprintCallable, BlueprintEvent)

void ASoccerBall_C::ClampVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "ClampVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "ReceiveTick");

	Params::SoccerBall_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.PlayKickSound_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASoccerBall_C::PlayKickSound_All(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "PlayKickSound_All");

	Params::SoccerBall_C_PlayKickSound_All Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.PlayDribbleSound_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ASoccerBall_C::PlayDribbleSound_All(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "PlayDribbleSound_All");

	Params::SoccerBall_C_PlayDribbleSound_All Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ASoccerBall_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.SetBallScale
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::SetBallScale(class USceneComponent* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "SetBallScale");

	Params::SoccerBall_C_SetBallScale Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Gk_AttachToCharacter
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Gk_AttachToCharacter(class ASP_Character_C* SP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Gk_AttachToCharacter");

	Params::SoccerBall_C_Gk_AttachToCharacter Parms{};

	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Gk_DetachFromCharacter
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASoccerBall_C::Gk_DetachFromCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Gk_DetachFromCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.Perry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Perry(class ASP_Character_C* SP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Perry");

	Params::SoccerBall_C_Perry Parms{};

	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.PlaceBall_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::PlaceBall_All(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "PlaceBall_All");

	Params::SoccerBall_C_PlaceBall_All Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Set_Possessed
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Possessed                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ASP_Character_C*                  Param_PossessingCharacter                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Set_Possessed(bool Param_Possessed, class ASP_Character_C* Param_PossessingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Set_Possessed");

	Params::SoccerBall_C_Set_Possessed Parms{};

	Parms.Param_Possessed = Param_Possessed;
	Parms.Param_PossessingCharacter = Param_PossessingCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Gk_Release
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          KickVector                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReleaseType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Gk_Release(const struct FVector& KickVector, int32 ReleaseType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Gk_Release");

	Params::SoccerBall_C_Gk_Release Parms{};

	Parms.KickVector = std::move(KickVector);
	Parms.ReleaseType = ReleaseType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.PlaceBall
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::PlaceBall(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "PlaceBall");

	Params::SoccerBall_C_PlaceBall Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.Kick
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Param_Kick                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   KickType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   KickPower                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CurveVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Kick(const struct FVector& Param_Kick, int32 KickType, float KickPower, const struct FVector& CurveVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Kick");

	Params::SoccerBall_C_Kick Parms{};

	Parms.Param_Kick = std::move(Param_Kick);
	Parms.KickType = KickType;
	Parms.KickPower = KickPower;
	Parms.CurveVector = std::move(CurveVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SoccerBall.SoccerBall_C.CurveTimeline__UpdateFunc
// (BlueprintEvent)

void ASoccerBall_C::CurveTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "CurveTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.CurveTimeline__FinishedFunc
// (BlueprintEvent)

void ASoccerBall_C::CurveTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "CurveTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SoccerBall.SoccerBall_C.GetBallLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::GetBallLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "GetBallLocation");

	Params::SoccerBall_C_GetBallLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function SoccerBall.SoccerBall_C.Calculate_GkCatch
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASoccerBall_C*                    Param_SoccerBall                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AuxHorizontal                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AuxVertical                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASoccerBall_C::Calculate_GkCatch(class ASP_Character_C* Character, class ASoccerBall_C* Param_SoccerBall, float* AuxHorizontal, float* AuxVertical)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SoccerBall_C", "Calculate_GkCatch");

	Params::SoccerBall_C_Calculate_GkCatch Parms{};

	Parms.Character = Character;
	Parms.Param_SoccerBall = Param_SoccerBall;

	UObject::ProcessEvent(Func, &Parms);

	if (AuxHorizontal != nullptr)
		*AuxHorizontal = Parms.AuxHorizontal;

	if (AuxVertical != nullptr)
		*AuxVertical = Parms.AuxVertical;
}

}

