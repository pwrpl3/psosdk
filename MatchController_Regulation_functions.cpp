#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchController_Regulation

#include "Basic.hpp"

#include "MatchController_Regulation_classes.hpp"
#include "MatchController_Regulation_parameters.hpp"


namespace SDK
{

// Function MatchController_Regulation.MatchController_Regulation_C.ExecuteUbergraph_MatchController_Regulation
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::ExecuteUbergraph_MatchController_Regulation(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ExecuteUbergraph_MatchController_Regulation");

	Params::MatchController_Regulation_C_ExecuteUbergraph_MatchController_Regulation Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CheckSubstituteSpawn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASP_Controller_C*                 SP_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SendTeamChangeMessage                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMatchController_Regulation_C::CheckSubstituteSpawn(int32 Team, int32 Position, class ASP_Controller_C* SP_Controller, bool SendTeamChangeMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CheckSubstituteSpawn");

	Params::MatchController_Regulation_C_CheckSubstituteSpawn Parms{};

	Parms.Team = Team;
	Parms.Position = Position;
	Parms.SP_Controller = SP_Controller;
	Parms.SendTeamChangeMessage = SendTeamChangeMessage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.InitiateSwaps
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::InitiateSwaps()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "InitiateSwaps");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.INT
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ASP_Character_C*>          TeamCharacters                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class ASP_Character_C*                  Param_OnestTouchCharacter                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::INT(const TArray<class ASP_Character_C*>& TeamCharacters, class ASP_Character_C* Param_OnestTouchCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "INT");

	Params::MatchController_Regulation_C_INT Parms{};

	Parms.TeamCharacters = std::move(TeamCharacters);
	Parms.Param_OnestTouchCharacter = Param_OnestTouchCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Play_CrowdRoar_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Play_CrowdRoar_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Play_CrowdRoar_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculateFieldSizeAssets
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::CalculateFieldSizeAssets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculateFieldSizeAssets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetFieldSize6v6
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::SetFieldSize6v6()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetFieldSize6v6");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculateFieldSize
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::CalculateFieldSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculateFieldSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetFieldSize8v8_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::SetFieldSize8v8_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetFieldSize8v8_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetFieldSize8v8
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::SetFieldSize8v8()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetFieldSize8v8");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetFieldSize11v11_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::SetFieldSize11v11_All()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetFieldSize11v11_All");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetFieldSize11v11
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::SetFieldSize11v11()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetFieldSize11v11");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__MatchController_Regulation_FieldPerimeterExterior_K2Node_ComponentBoundEvent_12_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__MatchController_Regulation_FieldPerimeterExterior_K2Node_ComponentBoundEvent_12_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__MatchController_Regulation_FieldPerimeterExterior_K2Node_ComponentBoundEvent_12_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__MatchController_Regulation_FieldPerimeterExterior_K2Node_ComponentBoundEvent_12_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Set_GkCatchShieldUp
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_GkCatchShieldUp                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMatchController_Regulation_C::Set_GkCatchShieldUp(bool Param_GkCatchShieldUp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Set_GkCatchShieldUp");

	Params::MatchController_Regulation_C_Set_GkCatchShieldUp Parms{};

	Parms.Param_GkCatchShieldUp = Param_GkCatchShieldUp;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetThrowInShieldLarge
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECollisionEnabled                       NewType                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::SetThrowInShieldLarge(ECollisionEnabled NewType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetThrowInShieldLarge");

	Params::MatchController_Regulation_C_SetThrowInShieldLarge Parms{};

	Parms.NewType = NewType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.DisableThrowInShieldLarge
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::DisableThrowInShieldLarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "DisableThrowInShieldLarge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EnableThrowInShieldLarge
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::EnableThrowInShieldLarge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EnableThrowInShieldLarge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.GkRelease_DisableGoalShields
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::GkRelease_DisableGoalShields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "GkRelease_DisableGoalShields");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.GkCatch_MovePlayersTeam2
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::GkCatch_MovePlayersTeam2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "GkCatch_MovePlayersTeam2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.GkCatch_MovePlayersTeam1
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::GkCatch_MovePlayersTeam1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "GkCatch_MovePlayersTeam1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Set_OffSidesLineColor
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Team1Color                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Team2Color                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Set_OffSidesLineColor(const struct FLinearColor& Team1Color, const struct FLinearColor& Team2Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Set_OffSidesLineColor");

	Params::MatchController_Regulation_C_Set_OffSidesLineColor Parms{};

	Parms.Team1Color = std::move(Team1Color);
	Parms.Team2Color = std::move(Team2Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Set_TeamColorAssets
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Team1Color                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Team2Color                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Set_TeamColorAssets(const struct FLinearColor& Team1Color, const struct FLinearColor& Team2Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Set_TeamColorAssets");

	Params::MatchController_Regulation_C_Set_TeamColorAssets Parms{};

	Parms.Team1Color = std::move(Team1Color);
	Parms.Team2Color = std::move(Team2Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__MP_MatchController_Regulation_WestPenaltyPerimeter1_K2Node_ComponentBoundEvent_11_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__MP_MatchController_Regulation_WestPenaltyPerimeter1_K2Node_ComponentBoundEvent_11_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__MP_MatchController_Regulation_WestPenaltyPerimeter1_K2Node_ComponentBoundEvent_11_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__MP_MatchController_Regulation_WestPenaltyPerimeter1_K2Node_ComponentBoundEvent_11_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__MP_MatchController_Regulation_EastPenaltyPerimeter1_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__MP_MatchController_Regulation_EastPenaltyPerimeter1_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__MP_MatchController_Regulation_EastPenaltyPerimeter1_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__MP_MatchController_Regulation_EastPenaltyPerimeter1_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SPTO_FreeKick
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          SPT_Location                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::SPTO_FreeKick(const struct FVector& SPT_Location, int32 Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SPTO_FreeKick");

	Params::MatchController_Regulation_C_SPTO_FreeKick Parms{};

	Parms.SPT_Location = std::move(SPT_Location);
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.StopSetPieceTimer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::StopSetPieceTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "StopSetPieceTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.StartSetPieceTimer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     In_Color_and_Opacity_Specified_Color                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SetPieceLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SetPieceTeam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::StartSetPieceTimer(const class FText& Text, const struct FLinearColor& In_Color_and_Opacity_Specified_Color, const struct FVector& SetPieceLocation, int32 SetPieceTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "StartSetPieceTimer");

	Params::MatchController_Regulation_C_StartSetPieceTimer Parms{};

	Parms.Text = std::move(Text);
	Parms.In_Color_and_Opacity_Specified_Color = std::move(In_Color_and_Opacity_Specified_Color);
	Parms.SetPieceLocation = std::move(SetPieceLocation);
	Parms.SetPieceTeam = SetPieceTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.NetUpdateMatchBall
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::NetUpdateMatchBall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "NetUpdateMatchBall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ForceResetMatch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ForceResetMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ForceResetMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.DisableAllShields
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::DisableAllShields()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "DisableAllShields");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.FreeKickShieldUnbllockTeam2
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::FreeKickShieldUnbllockTeam2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "FreeKickShieldUnbllockTeam2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.FreeKickShieldUnblockTeam1
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::FreeKickShieldUnblockTeam1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "FreeKickShieldUnblockTeam1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ThrowIn_PlaceBall_All
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASoccerBall_C*                    SoccerBall                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::ThrowIn_PlaceBall_All(class ASoccerBall_C* SoccerBall, const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ThrowIn_PlaceBall_All");

	Params::MatchController_Regulation_C_ThrowIn_PlaceBall_All Parms{};

	Parms.SoccerBall = SoccerBall;
	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ThrowIn_PlaceBall
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::ThrowIn_PlaceBall(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ThrowIn_PlaceBall");

	Params::MatchController_Regulation_C_ThrowIn_PlaceBall Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.OuterPerimeterOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Object                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AMatchController_Regulation_C::OuterPerimeterOverlap(class UObject* Object)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "OuterPerimeterOverlap");

	Params::MatchController_Regulation_C_OuterPerimeterOverlap Parms{};

	Parms.Object = Object;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ResetOffsides
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ResetOffsides()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ResetOffsides");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ThrowinUpdatePossession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_PossessingTeam                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_HitType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASP_Character_C*                  ThrowInTaker                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::ThrowinUpdatePossession(int32 Param_PossessingTeam, int32 Param_HitType, class ASP_Character_C* ThrowInTaker)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ThrowinUpdatePossession");

	Params::MatchController_Regulation_C_ThrowinUpdatePossession Parms{};

	Parms.Param_PossessingTeam = Param_PossessingTeam;
	Parms.Param_HitType = Param_HitType;
	Parms.ThrowInTaker = ThrowInTaker;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.UpdateTeamPass
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::UpdateTeamPass()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "UpdateTeamPass");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.StartOvertime
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::StartOvertime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "StartOvertime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SingleKeeperTick
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::SingleKeeperTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SingleKeeperTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CheckSingleKeeper
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::CheckSingleKeeper()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CheckSingleKeeper");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetOvertime
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    OverTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMatchController_Regulation_C::SetOvertime(bool OverTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetOvertime");

	Params::MatchController_Regulation_C_SetOvertime Parms{};

	Parms.OverTime = OverTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EndMatch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_WinningTeam                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::EndMatch(int32 Param_WinningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EndMatch");

	Params::MatchController_Regulation_C_EndMatch Parms{};

	Parms.Param_WinningTeam = Param_WinningTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetSingleKeeper
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_SingleKeeper                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMatchController_Regulation_C::SetSingleKeeper(bool Param_SingleKeeper)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetSingleKeeper");

	Params::MatchController_Regulation_C_SetSingleKeeper Parms{};

	Parms.Param_SingleKeeper = Param_SingleKeeper;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__MP_MatchController_Regulation_SingleKeeperBoundry_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__MP_MatchController_Regulation_SingleKeeperBoundry_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__MP_MatchController_Regulation_SingleKeeperBoundry_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__MP_MatchController_Regulation_SingleKeeperBoundry_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Reset_AdvantageState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Reset_AdvantageState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Reset_AdvantageState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team2Penalty
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Team2Penalty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team2Penalty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Disable_EastGoalShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Disable_EastGoalShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Disable_EastGoalShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Enable_EastGoalShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Enable_EastGoalShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Enable_EastGoalShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Disable_WestGoalShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Disable_WestGoalShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Disable_WestGoalShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Enable_WestGoalShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Enable_WestGoalShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Enable_WestGoalShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team1Penalty
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Team1Penalty()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team1Penalty");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EnforceFoul
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::EnforceFoul()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EnforceFoul");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.RecieveFoulInfo
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  FouledCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::RecieveFoulInfo(class ASP_Character_C* FouledCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "RecieveFoulInfo");

	Params::MatchController_Regulation_C_RecieveFoulInfo Parms{};

	Parms.FouledCharacter = FouledCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.DoubleTouchFreeKick
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TO_Location                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::DoubleTouchFreeKick(const struct FVector& TO_Location, class ASP_Character_C* SP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "DoubleTouchFreeKick");

	Params::MatchController_Regulation_C_DoubleTouchFreeKick Parms{};

	Parms.TO_Location = std::move(TO_Location);
	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ResetOffSideLines
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ResetOffSideLines()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ResetOffSideLines");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.PlaceOffSideLines
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Team1Location                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Team2Location                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   BallLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::PlaceOffSideLines(float Team1Location, float Team2Location, float BallLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "PlaceOffSideLines");

	Params::MatchController_Regulation_C_PlaceOffSideLines Parms{};

	Parms.Team1Location = Team1Location;
	Parms.Team2Location = Team2Location;
	Parms.BallLocation = BallLocation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.OffSide_FreeKick
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  OffSideCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::OffSide_FreeKick(class ASP_Character_C* OffSideCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "OffSide_FreeKick");

	Params::MatchController_Regulation_C_OffSide_FreeKick Parms{};

	Parms.OffSideCharacter = OffSideCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.All_CheckOffSide
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::All_CheckOffSide(class ASP_Character_C* SP_Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "All_CheckOffSide");

	Params::MatchController_Regulation_C_All_CheckOffSide Parms{};

	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ResetThrowInShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ResetThrowInShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ResetThrowInShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ThrowInSpehereOverlap
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::ThrowInSpehereOverlap(class UObject* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ThrowInSpehereOverlap");

	Params::MatchController_Regulation_C_ThrowInSpehereOverlap Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ThrowInHit_CheckInBounds
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ThrowInHit_CheckInBounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ThrowInHit_CheckInBounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__CL_MatchController_Regulation_ThrowInSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMatchController_Regulation_C::BndEvt__CL_MatchController_Regulation_ThrowInSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__CL_MatchController_Regulation_ThrowInSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__CL_MatchController_Regulation_ThrowInSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.PlaceThrowInShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::PlaceThrowInShield(const struct FVector& NewLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "PlaceThrowInShield");

	Params::MatchController_Regulation_C_PlaceThrowInShield Parms{};

	Parms.NewLocation = std::move(NewLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team2ThrowIn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Y_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Team2ThrowIn(float Y_Location, float X_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team2ThrowIn");

	Params::MatchController_Regulation_C_Team2ThrowIn Parms{};

	Parms.Y_Location = Y_Location;
	Parms.X_Location = X_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team1ThrowIn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Y_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   X_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Team1ThrowIn(float Y_Location, float X_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team1ThrowIn");

	Params::MatchController_Regulation_C_Team1ThrowIn Parms{};

	Parms.Y_Location = Y_Location;
	Parms.X_Location = X_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ResetFreeKickShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ResetFreeKickShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ResetFreeKickShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.FreeKickShieldBlockTeam2
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::FreeKickShieldBlockTeam2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "FreeKickShieldBlockTeam2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.FreeKickShieldBlockTeam1
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::FreeKickShieldBlockTeam1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "FreeKickShieldBlockTeam1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.PlaceFreeKickShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FreeKickTeam                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::PlaceFreeKickShield(const struct FVector& NewLocation, int32 FreeKickTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "PlaceFreeKickShield");

	Params::MatchController_Regulation_C_PlaceFreeKickShield Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.FreeKickTeam = FreeKickTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EastPenaltyShield_BlockTeam2
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::EastPenaltyShield_BlockTeam2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EastPenaltyShield_BlockTeam2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EastPenaltyShield_BlockTeam1
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::EastPenaltyShield_BlockTeam1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EastPenaltyShield_BlockTeam1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.WestPenaltyShield_BlockTeam2
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::WestPenaltyShield_BlockTeam2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "WestPenaltyShield_BlockTeam2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.WestPenaltyShield_BlockTeam1
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::WestPenaltyShield_BlockTeam1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "WestPenaltyShield_BlockTeam1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team2Corner
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Y_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Team2Corner(float Y_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team2Corner");

	Params::MatchController_Regulation_C_Team2Corner Parms{};

	Parms.Y_Location = Y_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team2GoalKick
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Y_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Team2GoalKick(float Y_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team2GoalKick");

	Params::MatchController_Regulation_C_Team2GoalKick Parms{};

	Parms.Y_Location = Y_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team1Corner
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Y_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Team1Corner(float Y_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team1Corner");

	Params::MatchController_Regulation_C_Team1Corner Parms{};

	Parms.Y_Location = Y_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team1GoalKick
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Y_Location                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Team1GoalKick(float Y_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team1GoalKick");

	Params::MatchController_Regulation_C_Team1GoalKick Parms{};

	Parms.Y_Location = Y_Location;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculatePerimeterExit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASoccerBall_C*                    SoccerBall                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::CalculatePerimeterExit(class ASoccerBall_C* SoccerBall)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculatePerimeterExit");

	Params::MatchController_Regulation_C_CalculatePerimeterExit Parms{};

	Parms.SoccerBall = SoccerBall;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__CL_MatchController_Regulation_FieldPerimeter_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__CL_MatchController_Regulation_FieldPerimeter_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__CL_MatchController_Regulation_FieldPerimeter_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__CL_MatchController_Regulation_FieldPerimeter_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.FieldPerimeterEndOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::FieldPerimeterEndOverlap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "FieldPerimeterEndOverlap");

	Params::MatchController_Regulation_C_FieldPerimeterEndOverlap Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team2Scored
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Team2Scored()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team2Scored");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Team1Scored
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Team1Scored()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Team1Scored");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.WestGoalOverLap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::WestGoalOverLap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "WestGoalOverLap");

	Params::MatchController_Regulation_C_WestGoalOverLap Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EastGoalOverLap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::EastGoalOverLap(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EastGoalOverLap");

	Params::MatchController_Regulation_C_EastGoalOverLap Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__CL_MatchController_Regulation_WestGoal_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMatchController_Regulation_C::BndEvt__CL_MatchController_Regulation_WestGoal_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__CL_MatchController_Regulation_WestGoal_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__CL_MatchController_Regulation_WestGoal_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__CL_MatchController_Regulation_EastGoal_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMatchController_Regulation_C::BndEvt__CL_MatchController_Regulation_EastGoal_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__CL_MatchController_Regulation_EastGoal_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__CL_MatchController_Regulation_EastGoal_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ResetMatch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::ResetMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ResetMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EnterStoppageTime
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::EnterStoppageTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EnterStoppageTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.End2ndHalf
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::End2ndHalf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "End2ndHalf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.End1stHalf
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::End1stHalf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "End1stHalf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ReceiveTick");

	Params::MatchController_Regulation_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.MatchTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::MatchTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "MatchTick");

	Params::MatchController_Regulation_C_MatchTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.2ndTouchCharacters
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::TwondTouchCharacters()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "2ndTouchCharacters");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculatePossession
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASP_Character_C*                  SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CheckOffsides                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Param_HitType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::CalculatePossession(class ASP_Character_C* SP_Character, bool CheckOffsides, int32 Param_HitType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculatePossession");

	Params::MatchController_Regulation_C_CalculatePossession Parms{};

	Parms.SP_Character = SP_Character;
	Parms.CheckOffsides = CheckOffsides;
	Parms.Param_HitType = Param_HitType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Disable_EastPenaltyShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Disable_EastPenaltyShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Disable_EastPenaltyShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Disable_WestPenaltyShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Disable_WestPenaltyShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Disable_WestPenaltyShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Disable_EastHalfShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Disable_EastHalfShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Disable_EastHalfShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Enable_EastHalfShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Enable_EastHalfShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Enable_EastHalfShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Disable_WestHalfShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Disable_WestHalfShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Disable_WestHalfShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Enable_WestHalfShield
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Enable_WestHalfShield()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Enable_WestHalfShield");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Set_MatchState
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MatchState                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::Set_MatchState(int32 Param_MatchState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Set_MatchState");

	Params::MatchController_Regulation_C_Set_MatchState Parms{};

	Parms.Param_MatchState = Param_MatchState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Play_CrowdRoar
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Play_CrowdRoar()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Play_CrowdRoar");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Play_Crowd_GoalScored
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Play_Crowd_GoalScored()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Play_Crowd_GoalScored");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Play_WhistleLong
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Play_WhistleLong()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Play_WhistleLong");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.Play_WhistleShort
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::Play_WhistleShort()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "Play_WhistleShort");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.All_KickOffSpawn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::All_KickOffSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "All_KickOffSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.DestroyPersonalBalls
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::DestroyPersonalBalls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "DestroyPersonalBalls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.StartMatch
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::StartMatch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "StartMatch");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CheckSP_CharacterSpawn
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ASP_Controller_C*                 SP_Controller                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SendTeamChangeMessage_                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMatchController_Regulation_C::CheckSP_CharacterSpawn(int32 Team, int32 Position, class ASP_Controller_C* SP_Controller, bool SendTeamChangeMessage_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CheckSP_CharacterSpawn");

	Params::MatchController_Regulation_C_CheckSP_CharacterSpawn Parms{};

	Parms.Team = Team;
	Parms.Position = Position;
	Parms.SP_Controller = SP_Controller;
	Parms.SendTeamChangeMessage_ = SendTeamChangeMessage_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__WestPenaltyBoundry_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::BndEvt__WestPenaltyBoundry_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__WestPenaltyBoundry_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__WestPenaltyBoundry_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMatchController_Regulation_C::BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.PenaltyBoundries_EndOverlap
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AMatchController_Regulation_C::PenaltyBoundries_EndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "PenaltyBoundries_EndOverlap");

	Params::MatchController_Regulation_C_PenaltyBoundries_EndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.EastPenaltyBoundry_BeginOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void AMatchController_Regulation_C::EastPenaltyBoundry_BeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "EastPenaltyBoundry_BeginOverlap");

	Params::MatchController_Regulation_C_EastPenaltyBoundry_BeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.WestPenaltyBoundry_BeginOverlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::WestPenaltyBoundry_BeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "WestPenaltyBoundry_BeginOverlap");

	Params::MatchController_Regulation_C_WestPenaltyBoundry_BeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AMatchController_Regulation_C::BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");

	Params::MatchController_Regulation_C_BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MatchController_Regulation.MatchController_Regulation_C.GetReferences
// (BlueprintCallable, BlueprintEvent)

void AMatchController_Regulation_C::GetReferences()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "GetReferences");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMatchController_Regulation_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetPieceTimeline__UpdateFunc
// (BlueprintEvent)

void AMatchController_Regulation_C::SetPieceTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetPieceTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.SetPieceTimeline__FinishedFunc
// (BlueprintEvent)

void AMatchController_Regulation_C::SetPieceTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "SetPieceTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.OvertimeKickoffTimer__UpdateFunc
// (BlueprintEvent)

void AMatchController_Regulation_C::OvertimeKickoffTimer__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "OvertimeKickoffTimer__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.OvertimeKickoffTimer__FinishedFunc
// (BlueprintEvent)

void AMatchController_Regulation_C::OvertimeKickoffTimer__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "OvertimeKickoffTimer__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculateSpawnTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SingleKeeperSpawn                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FTransform                       SpawnTransform                                         (Parm, OutParm, IsPlainOldData, NoDestructor)
// struct FRotator                         NewRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AMatchController_Regulation_C::CalculateSpawnTransform(int32 Team, int32 Position, bool SingleKeeperSpawn, struct FTransform* SpawnTransform, struct FRotator* NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculateSpawnTransform");

	Params::MatchController_Regulation_C_CalculateSpawnTransform Parms{};

	Parms.Team = Team;
	Parms.Position = Position;
	Parms.SingleKeeperSpawn = SingleKeeperSpawn;

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnTransform != nullptr)
		*SpawnTransform = std::move(Parms.SpawnTransform);

	if (NewRotation != nullptr)
		*NewRotation = std::move(Parms.NewRotation);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculateGoalState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithAssist_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             ScoringTeamText                                        (Parm, OutParm)
// struct FLinearColor                     ScoringTeamTextColor                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             GoalScorer                                             (Parm, OutParm)
// class FText                             AssistScorer                                           (Parm, OutParm)

void AMatchController_Regulation_C::CalculateGoalState(int32 Team, bool* WithAssist_, class FText* ScoringTeamText, struct FLinearColor* ScoringTeamTextColor, class FText* GoalScorer, class FText* AssistScorer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculateGoalState");

	Params::MatchController_Regulation_C_CalculateGoalState Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (WithAssist_ != nullptr)
		*WithAssist_ = Parms.WithAssist_;

	if (ScoringTeamText != nullptr)
		*ScoringTeamText = std::move(Parms.ScoringTeamText);

	if (ScoringTeamTextColor != nullptr)
		*ScoringTeamTextColor = std::move(Parms.ScoringTeamTextColor);

	if (GoalScorer != nullptr)
		*GoalScorer = std::move(Parms.GoalScorer);

	if (AssistScorer != nullptr)
		*AssistScorer = std::move(Parms.AssistScorer);
}


// Function MatchController_Regulation.MatchController_Regulation_C.CalculateFreeKickShieldMove
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           SP_Character                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewLocationX                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewLocationY                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewLocationZ                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::CalculateFreeKickShieldMove(int32 Team, class AActor* SP_Character, float* NewLocationX, float* NewLocationY, float* NewLocationZ)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CalculateFreeKickShieldMove");

	Params::MatchController_Regulation_C_CalculateFreeKickShieldMove Parms{};

	Parms.Team = Team;
	Parms.SP_Character = SP_Character;

	UObject::ProcessEvent(Func, &Parms);

	if (NewLocationX != nullptr)
		*NewLocationX = Parms.NewLocationX;

	if (NewLocationY != nullptr)
		*NewLocationY = Parms.NewLocationY;

	if (NewLocationZ != nullptr)
		*NewLocationZ = Parms.NewLocationZ;
}


// Function MatchController_Regulation.MatchController_Regulation_C.CheckFreeKickPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          FreeKickLocation                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          SetPieceLocation                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMatchController_Regulation_C::CheckFreeKickPosition(const struct FVector& FreeKickLocation, int32 Team, struct FVector* SetPieceLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MatchController_Regulation_C", "CheckFreeKickPosition");

	Params::MatchController_Regulation_C_CheckFreeKickPosition Parms{};

	Parms.FreeKickLocation = std::move(FreeKickLocation);
	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (SetPieceLocation != nullptr)
		*SetPieceLocation = std::move(Parms.SetPieceLocation);
}

}

