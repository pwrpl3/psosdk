#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SoccerBall

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass SoccerBall.SoccerBall_C
// 0x00A8 (0x02C8 - 0x0220)
class ASoccerBall_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       BallHalo;                                          // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SoccerBall;                                        // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         CurveTimeline_CurveOutput_078D9F7949C8CBAC0B18D0A3F674A98F; // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            CurveTimeline__Direction_078D9F7949C8CBAC0B18D0A3F674A98F; // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2578[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     CurveTimeline;                                     // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMatchController_Indoor_C*              MatchController_3v3;                               // 0x0248(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMatchController_Regulation_C*          MatchController_Regulation;                        // 0x0250(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASP_Character_C*                        PossessingCharacter;                               // 0x0258(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASP_Character_C*                        Throwin_Taker;                                     // 0x0260(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BallDesign;                                        // 0x0268(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2579[0x4];                                     // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UMaterial*>                 BallDesignMap;                                     // 0x0270(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          IsMatchBall;                                       // 0x02C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Possessed;                                         // 0x02C1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PlacingBall;                                       // 0x02C2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AwaitingThrowIn;                                   // 0x02C3(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ReleaseCooldown;                                   // 0x02C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Checking_Throwin_Bounds;                           // 0x02C5(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShotPostHitCoolDown;                               // 0x02C6(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SoccerBall(int32 EntryPoint);
	void Set_ShotPostHitCoolDown(bool Param_ShotPostHitCoolDown);
	void BndEvt__SoccerBall_SoccerBall_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Set_AwaitingThrowIn(bool Param_AwaitingThrowIn);
	void Perry_0(class ASP_Character_C* SP_Character);
	void UpdateBallHalo(int32 HaloSize);
	void SetBallDesign();
	void ThrowIn_CalculatePossession(int32 PossessingTeam, class ASP_Character_C* SetPieceTaker);
	void StopCurve();
	void Call_CalculatePossession(class ASP_Character_C* SP_Character, bool CheckOffside_, int32 HitType);
	void Gk_PerryImpulse(const struct FVector& Param_Kick);
	void ThrowInPickUp(class ASP_Character_C* SP_Character);
	void Set_PlacingBall(bool Param_PlacingBall);
	void Kick_All(class UPrimitiveComponent* Target, const struct FVector& Param_Kick);
	void ClampVelocity();
	void ReceiveTick(float DeltaSeconds);
	void PlayKickSound_All(const struct FVector& Location, const struct FRotator& Rotation);
	void PlayDribbleSound_All(const struct FVector& Location, const struct FRotator& Rotation);
	void ReceiveBeginPlay();
	void SetBallScale(class USceneComponent* Target);
	void Gk_AttachToCharacter(class ASP_Character_C* SP_Character);
	void Gk_DetachFromCharacter();
	void Perry(class ASP_Character_C* SP_Character);
	void PlaceBall_All(const struct FVector& NewLocation);
	void Set_Possessed(bool Param_Possessed, class ASP_Character_C* Param_PossessingCharacter);
	void Gk_Release(const struct FVector& KickVector, int32 ReleaseType);
	void PlaceBall(const struct FVector& NewLocation);
	void Kick(const struct FVector& Param_Kick, int32 KickType, float KickPower, const struct FVector& CurveVector);
	void CurveTimeline__UpdateFunc();
	void CurveTimeline__FinishedFunc();
	void GetBallLocation(struct FVector* Location);
	void Calculate_GkCatch(class ASP_Character_C* Character, class ASoccerBall_C* Param_SoccerBall, float* AuxHorizontal, float* AuxVertical);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SoccerBall_C">();
	}
	static class ASoccerBall_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASoccerBall_C>();
	}
};

}

