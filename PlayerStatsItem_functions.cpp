#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerStatsItem

#include "Basic.hpp"

#include "PlayerStatsItem_classes.hpp"
#include "PlayerStatsItem_parameters.hpp"


namespace SDK
{

// Function PlayerStatsItem.PlayerStatsItem_C.ExecuteUbergraph_PlayerStatsItem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStatsItem_C::ExecuteUbergraph_PlayerStatsItem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "ExecuteUbergraph_PlayerStatsItem");

	Params::PlayerStatsItem_C_ExecuteUbergraph_PlayerStatsItem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStatsItem.PlayerStatsItem_C.RecieveUnavailableText
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UPlayerStatsItem_C::RecieveUnavailableText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "RecieveUnavailableText");

	Params::PlayerStatsItem_C_RecieveUnavailableText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStatsItem.PlayerStatsItem_C.BndEvt__TeamListItem_OccupiedButton_K2Node_ComponentBoundEvent_1_OnSelectionChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FString                           SelectedItem                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// ESelectInfo                             SelectionType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStatsItem_C::BndEvt__TeamListItem_OccupiedButton_K2Node_ComponentBoundEvent_1_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "BndEvt__TeamListItem_OccupiedButton_K2Node_ComponentBoundEvent_1_OnSelectionChangedEvent__DelegateSignature");

	Params::PlayerStatsItem_C_BndEvt__TeamListItem_OccupiedButton_K2Node_ComponentBoundEvent_1_OnSelectionChangedEvent__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStatsItem.PlayerStatsItem_C.RecievePlayerStats
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Passes                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Assists                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Shots                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Goals                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Tackles                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Interceptions                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_GkSaves                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_GkCatches                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStatsItem_C::RecievePlayerStats(int32 Param_Passes, int32 Param_Assists, int32 Param_Shots, int32 Param_Goals, int32 Param_Tackles, int32 Param_Interceptions, int32 Param_GkSaves, int32 Param_GkCatches)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "RecievePlayerStats");

	Params::PlayerStatsItem_C_RecievePlayerStats Parms{};

	Parms.Param_Passes = Param_Passes;
	Parms.Param_Assists = Param_Assists;
	Parms.Param_Shots = Param_Shots;
	Parms.Param_Goals = Param_Goals;
	Parms.Param_Tackles = Param_Tackles;
	Parms.Param_Interceptions = Param_Interceptions;
	Parms.Param_GkSaves = Param_GkSaves;
	Parms.Param_GkCatches = Param_GkCatches;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStatsItem.PlayerStatsItem_C.RecievePlayerDetails
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           PlayerSessionId                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_UserId                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
// int32                                   FoulState                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsHost                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsCaptain                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsMuted                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Rating                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Param_Score                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// uint8                                   Param_Ping                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerStatsItem_C::RecievePlayerDetails(const class FString& SteamID, const class FString& PlayerSessionId, const class FString& Param_UserId, const class FString& Param_Name, int32 FoulState, bool IsHost, bool IsCaptain, bool IsMuted, const class FString& Rating, int32 Param_Score, uint8 Param_Ping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "RecievePlayerDetails");

	Params::PlayerStatsItem_C_RecievePlayerDetails Parms{};

	Parms.SteamID = std::move(SteamID);
	Parms.PlayerSessionId = std::move(PlayerSessionId);
	Parms.Param_UserId = std::move(Param_UserId);
	Parms.Param_Name = std::move(Param_Name);
	Parms.FoulState = FoulState;
	Parms.IsHost = IsHost;
	Parms.IsCaptain = IsCaptain;
	Parms.IsMuted = IsMuted;
	Parms.Rating = std::move(Rating);
	Parms.Param_Score = Param_Score;
	Parms.Param_Ping = Param_Ping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerStatsItem.PlayerStatsItem_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerStatsItem_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStatsItem.PlayerStatsItem_C.BndEvt__TeamListItem_AvailableButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UPlayerStatsItem_C::BndEvt__TeamListItem_AvailableButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "BndEvt__TeamListItem_AvailableButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerStatsItem.PlayerStatsItem_C.CalculateTeamColorStyles
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FComboBoxStyle                   OccupiedButtonStyle                                    (Parm, OutParm)
// struct FButtonStyle                     AvailableButtonStyle                                   (Parm, OutParm)

void UPlayerStatsItem_C::CalculateTeamColorStyles(struct FComboBoxStyle* OccupiedButtonStyle, struct FButtonStyle* AvailableButtonStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerStatsItem_C", "CalculateTeamColorStyles");

	Params::PlayerStatsItem_C_CalculateTeamColorStyles Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OccupiedButtonStyle != nullptr)
		*OccupiedButtonStyle = std::move(Parms.OccupiedButtonStyle);

	if (AvailableButtonStyle != nullptr)
		*AvailableButtonStyle = std::move(Parms.AvailableButtonStyle);
}

}

