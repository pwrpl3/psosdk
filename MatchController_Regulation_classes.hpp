#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MatchController_Regulation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "TeamFormation_0_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MatchController_Regulation.MatchController_Regulation_C
// 0x0660 (0x0880 - 0x0220)
class AMatchController_Regulation_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   FieldPerimeterExterior;                            // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ThrowInShieldLarge;                                // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WestPenaltyExterior;                               // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EastPenaltyExterior;                               // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          SingleKeeperBoundry;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EastGoalShield;                                    // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WestGoalShield;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OffSideLine_Ball;                                  // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OffSideLine_Team2;                                 // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   OffSideLine_Team1;                                 // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       ThrowInSphere;                                     // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ThrowInShield;                                     // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FreeKickShield;                                    // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FieldPerimeter;                                    // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WestPenaltyShield;                                 // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WestHalfShield;                                    // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WestGoal;                                          // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EastPenaltyShield;                                 // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EastHalfShield;                                    // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EastGoal;                                          // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   WestPenaltyPerimeter;                              // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EastPenaltyPerimeter;                              // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         SetPieceTimeline_Time_5F54BF774043C6E6925DBC8F2E25D2AF; // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SetPieceTimeline__Direction_5F54BF774043C6E6925DBC8F2E25D2AF; // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A1[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SetPieceTimeline;                                  // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OvertimeKickoffTimer_CountdownTime_9E1FD5E4459C5B7E08BE1FAB5A16E492; // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OvertimeKickoffTimer__Direction_9E1FD5E4459C5B7E08BE1FAB5A16E492; // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A2[0x3];                                     // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OvertimeKickoffTimer;                              // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_GameState_C*                        MP_GameState;                                      // 0x0300(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ASoccerBall_C*                          MatchBall;                                         // 0x0308(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchState;                                        // 0x0310(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingKickoffTeam;                               // 0x0314(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CrowdRoarCoolDown;                                 // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A3[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASP_Character_C*                        OnestTouchCharacter;                               // 0x0320(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASP_Character_C*                        TwondTouchCharacter;                               // 0x0328(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASP_Character_C*                        OnestTouchCharacter_T1;                            // 0x0330(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASP_Character_C*                        OnestTouchCharacter_T2;                            // 0x0338(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PossessingTeam;                                    // 0x0340(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitType;                                           // 0x0344(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MatchSeconds;                                      // 0x0348(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalMatchSeconds;                                 // 0x034C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchMinutes;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T1PossessionTime;                                  // 0x0354(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         T2PossessionTime;                                  // 0x0358(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchLength;                                       // 0x035C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamSize;                                          // 0x0360(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentHalf;                                       // 0x0364(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InStoppageTime;                                    // 0x0368(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThrowIn_InBounds;                                  // 0x0369(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          JustTookSetPiece;                                  // 0x036A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A4[0x5];                                     // 0x036B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ASP_Character_C*                        SetPieceTaker;                                     // 0x0370(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ThrowInTeam;                                       // 0x0378(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ThrowInLocation;                                   // 0x037C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffSide_LastDefender_XLocation;                    // 0x0388(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OffSide_BallLocation;                              // 0x038C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DoubleTouchTeam;                                   // 0x0398(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DoubleTouchLocation;                               // 0x039C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoulAdvantageTeam;                                 // 0x03A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoulAdvantagePenaltyState;                         // 0x03AC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FoulLocation;                                      // 0x03B0(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NoTouchDuringAdvantage;                            // 0x03BC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FoulEnforced;                                      // 0x03BD(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A5[0x2];                                     // 0x03BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ASP_Character_C*                        FouledPlayer;                                      // 0x03C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SingleKeeper;                                      // 0x03C8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OvertimeEnabled;                                   // 0x03C9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InOvertime;                                        // 0x03CA(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TakingGoalKick;                                    // 0x03CB(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          EastGoalHasBall;                                   // 0x03CC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WestGoalHasBall;                                   // 0x03CD(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A6[0x2];                                     // 0x03CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WinningTeam;                                       // 0x03D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MM_Team1Size;                                      // 0x03D4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MM_Team2Size;                                      // 0x03D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SPTO_Location;                                     // 0x03DC(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GkCatchShieldUp;                                   // 0x03E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23A7[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NorthWestGoalKickSpot;                             // 0x03EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SouthWestGoalKickSpot;                             // 0x03F8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NorthEastGoalKickSpot;                             // 0x0404(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SouthEastGoalKickSpot;                             // 0x0410(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NorthWestCornerSpot;                               // 0x041C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SouthWestCornerSpot;                               // 0x0428(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NorthEastCornerSpot;                               // 0x0434(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SouthEastCornerSpot;                               // 0x0440(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NorthThrowInLine;                                  // 0x044C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SouthThrowInLine;                                  // 0x0450(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WestPenaltySpot;                                   // 0x0454(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             WestPenaltySpawn;                                  // 0x0460(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                EastPenaltySpot;                                   // 0x0490(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A8[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             EastPenaltySpawn;                                  // 0x04A0(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         PenaltyPerimeterX;                                 // 0x04D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PenaltyPerimeterY;                                 // 0x04D4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PenaltyMoveX;                                      // 0x04D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoalWidth;                                         // 0x04DC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GoalHeight;                                        // 0x04E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FieldPerimeterX;                                   // 0x04E4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FieldPerimeterY;                                   // 0x04E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FieldSizeMultiplier;                               // 0x04EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeamFormation                         T1_FormationChange;                                // 0x04F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTeamFormation                         T2_FormationChange;                                // 0x0540(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<int32, struct FTeamFormation>            Threev3_Formations;                                // 0x0590(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Fourv4_Formations;                                 // 0x05E0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Fivev5_Formations;                                 // 0x0630(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Sixv6_Formations;                                  // 0x0680(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Sevenv7_Formations;                                // 0x06D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Eightv8_Formations;                                // 0x0720(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Ninev9_Formations;                                 // 0x0770(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            One0v10_Formations;                                // 0x07C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            One1v11_Formations;                                // 0x0810(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         FieldSizeIndex;                                    // 0x0860(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SR_ValidPlayerCount;                               // 0x0864(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team1Score;                                        // 0x0868(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Team2Score;                                        // 0x086C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddedTKL;                                          // 0x0870(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_MatchController_Regulation(int32 EntryPoint);
	void CheckSubstituteSpawn(int32 Team, int32 Position, class ASP_Controller_C* SP_Controller, bool SendTeamChangeMessage);
	void InitiateSwaps();
	void INT(const TArray<class ASP_Character_C*>& TeamCharacters, class ASP_Character_C* Param_OnestTouchCharacter);
	void Play_CrowdRoar_All();
	void CalculateFieldSizeAssets();
	void SetFieldSize6v6();
	void CalculateFieldSize();
	void SetFieldSize8v8_All();
	void SetFieldSize8v8();
	void SetFieldSize11v11_All();
	void SetFieldSize11v11();
	void BndEvt__MatchController_Regulation_FieldPerimeterExterior_K2Node_ComponentBoundEvent_12_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Set_GkCatchShieldUp(bool Param_GkCatchShieldUp);
	void SetThrowInShieldLarge(ECollisionEnabled NewType);
	void DisableThrowInShieldLarge();
	void EnableThrowInShieldLarge();
	void GkRelease_DisableGoalShields();
	void GkCatch_MovePlayersTeam2();
	void GkCatch_MovePlayersTeam1();
	void Set_OffSidesLineColor(const struct FLinearColor& Team1Color, const struct FLinearColor& Team2Color);
	void Set_TeamColorAssets(const struct FLinearColor& Team1Color, const struct FLinearColor& Team2Color);
	void BndEvt__MP_MatchController_Regulation_WestPenaltyPerimeter1_K2Node_ComponentBoundEvent_11_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__MP_MatchController_Regulation_EastPenaltyPerimeter1_K2Node_ComponentBoundEvent_10_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void SPTO_FreeKick(const struct FVector& SPT_Location, int32 Team);
	void StopSetPieceTimer();
	void StartSetPieceTimer(const class FText& Text, const struct FLinearColor& In_Color_and_Opacity_Specified_Color, const struct FVector& SetPieceLocation, int32 SetPieceTeam);
	void NetUpdateMatchBall();
	void ForceResetMatch();
	void DisableAllShields();
	void FreeKickShieldUnbllockTeam2();
	void FreeKickShieldUnblockTeam1();
	void ThrowIn_PlaceBall_All(class ASoccerBall_C* SoccerBall, const struct FVector& NewLocation);
	void ThrowIn_PlaceBall(const struct FVector& NewLocation);
	void OuterPerimeterOverlap(class UObject* Object);
	void ResetOffsides();
	void ThrowinUpdatePossession(int32 Param_PossessingTeam, int32 Param_HitType, class ASP_Character_C* ThrowInTaker);
	void UpdateTeamPass();
	void StartOvertime();
	void SingleKeeperTick();
	void CheckSingleKeeper();
	void SetOvertime(bool OverTime);
	void EndMatch(int32 Param_WinningTeam);
	void SetSingleKeeper(bool Param_SingleKeeper);
	void BndEvt__MP_MatchController_Regulation_SingleKeeperBoundry_K2Node_ComponentBoundEvent_9_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void Reset_AdvantageState();
	void Team2Penalty();
	void Disable_EastGoalShield();
	void Enable_EastGoalShield();
	void Disable_WestGoalShield();
	void Enable_WestGoalShield();
	void Team1Penalty();
	void EnforceFoul();
	void RecieveFoulInfo(class ASP_Character_C* FouledCharacter);
	void DoubleTouchFreeKick(const struct FVector& TO_Location, class ASP_Character_C* SP_Character);
	void ResetOffSideLines();
	void PlaceOffSideLines(float Team1Location, float Team2Location, float BallLocation);
	void OffSide_FreeKick(class ASP_Character_C* OffSideCharacter);
	void All_CheckOffSide(class ASP_Character_C* SP_Character);
	void ResetThrowInShield();
	void ThrowInSpehereOverlap(class UObject* Actor);
	void ThrowInHit_CheckInBounds();
	void BndEvt__CL_MatchController_Regulation_ThrowInSphere_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PlaceThrowInShield(const struct FVector& NewLocation);
	void Team2ThrowIn(float Y_Location, float X_Location);
	void Team1ThrowIn(float Y_Location, float X_Location);
	void ResetFreeKickShield();
	void FreeKickShieldBlockTeam2();
	void FreeKickShieldBlockTeam1();
	void PlaceFreeKickShield(const struct FVector& NewLocation, int32 FreeKickTeam);
	void EastPenaltyShield_BlockTeam2();
	void EastPenaltyShield_BlockTeam1();
	void WestPenaltyShield_BlockTeam2();
	void WestPenaltyShield_BlockTeam1();
	void Team2Corner(float Y_Location);
	void Team2GoalKick(float Y_Location);
	void Team1Corner(float Y_Location);
	void Team1GoalKick(float Y_Location);
	void CalculatePerimeterExit(class ASoccerBall_C* SoccerBall);
	void BndEvt__CL_MatchController_Regulation_FieldPerimeter_K2Node_ComponentBoundEvent_8_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void FieldPerimeterEndOverlap(class AActor* Actor);
	void Team2Scored();
	void Team1Scored();
	void WestGoalOverLap(class AActor* Actor);
	void EastGoalOverLap(class AActor* Actor);
	void BndEvt__CL_MatchController_Regulation_WestGoal_K2Node_ComponentBoundEvent_7_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__CL_MatchController_Regulation_EastGoal_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void ResetMatch();
	void EnterStoppageTime();
	void End2ndHalf();
	void End1stHalf();
	void ReceiveTick(float DeltaSeconds);
	void MatchTick(float DeltaSeconds);
	void TwondTouchCharacters();
	void CalculatePossession(class ASP_Character_C* SP_Character, bool CheckOffsides, int32 Param_HitType);
	void Disable_EastPenaltyShield();
	void Disable_WestPenaltyShield();
	void Disable_EastHalfShield();
	void Enable_EastHalfShield();
	void Disable_WestHalfShield();
	void Enable_WestHalfShield();
	void Set_MatchState(int32 Param_MatchState);
	void Play_CrowdRoar();
	void Play_Crowd_GoalScored();
	void Play_WhistleLong();
	void Play_WhistleShort();
	void All_KickOffSpawn();
	void DestroyPersonalBalls();
	void StartMatch();
	void CheckSP_CharacterSpawn(int32 Team, int32 Position, class ASP_Controller_C* SP_Controller, bool SendTeamChangeMessage_);
	void BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__WestPenaltyBoundry_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void PenaltyBoundries_EndOverlap(class AActor* OtherActor);
	void EastPenaltyBoundry_BeginOverlap(class AActor* OtherActor);
	void WestPenaltyBoundry_BeginOverlap(class AActor* OtherActor);
	void BndEvt__EastPenaltyBoundry_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void GetReferences();
	void ReceiveBeginPlay();
	void SetPieceTimeline__UpdateFunc();
	void SetPieceTimeline__FinishedFunc();
	void OvertimeKickoffTimer__UpdateFunc();
	void OvertimeKickoffTimer__FinishedFunc();
	void CalculateSpawnTransform(int32 Team, int32 Position, bool SingleKeeperSpawn, struct FTransform* SpawnTransform, struct FRotator* NewRotation);
	void CalculateGoalState(int32 Team, bool* WithAssist_, class FText* ScoringTeamText, struct FLinearColor* ScoringTeamTextColor, class FText* GoalScorer, class FText* AssistScorer);
	void CalculateFreeKickShieldMove(int32 Team, class AActor* SP_Character, float* NewLocationX, float* NewLocationY, float* NewLocationZ);
	void CheckFreeKickPosition(const struct FVector& FreeKickLocation, int32 Team, struct FVector* SetPieceLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MatchController_Regulation_C">();
	}
	static class AMatchController_Regulation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMatchController_Regulation_C>();
	}
};

}

