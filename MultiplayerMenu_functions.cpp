#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MultiplayerMenu

#include "Basic.hpp"

#include "MultiplayerMenu_classes.hpp"
#include "MultiplayerMenu_parameters.hpp"


namespace SDK
{

// Function MultiplayerMenu.MultiplayerMenu_C.ExecuteUbergraph_MultiplayerMenu
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::ExecuteUbergraph_MultiplayerMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "ExecuteUbergraph_MultiplayerMenu");

	Params::MultiplayerMenu_C_ExecuteUbergraph_MultiplayerMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_ExportMatchStatsButton_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_ExportMatchStatsButton_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_ExportMatchStatsButton_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.ExportMatchStats
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::ExportMatchStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "ExportMatchStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.GoalStateFadeIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TeamScoreText                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     TeamScoreTextColor                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    WithAssist_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             ScorerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             AssisterName                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UMultiplayerMenu_C::GoalStateFadeIn(const class FText& TeamScoreText, const struct FLinearColor& TeamScoreTextColor, bool WithAssist_, const class FText& ScorerName, const class FText& AssisterName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "GoalStateFadeIn");

	Params::MultiplayerMenu_C_GoalStateFadeIn Parms{};

	Parms.TeamScoreText = std::move(TeamScoreText);
	Parms.TeamScoreTextColor = std::move(TeamScoreTextColor);
	Parms.WithAssist_ = WithAssist_;
	Parms.ScorerName = std::move(ScorerName);
	Parms.AssisterName = std::move(AssisterName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateMatchState
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateMatchState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateMatchState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.MatchStateSetText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     InColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::MatchStateSetText(const class FText& InText, const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "MatchStateSetText");

	Params::MultiplayerMenu_C_MatchStateSetText Parms{};

	Parms.InText = std::move(InText);
	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.MatchStateFadeOut
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::MatchStateFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "MatchStateFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.MatchStateFadeIn
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     InColor                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::MatchStateFadeIn(const class FText& InText, const struct FLinearColor& InColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "MatchStateFadeIn");

	Params::MultiplayerMenu_C_MatchStateFadeIn Parms{};

	Parms.InText = std::move(InText);
	Parms.InColor = std::move(InColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateCPTFormationItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTeamFormationItem_C*             PlayerStatsItem                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMP_PlayerState_C*                MP_PlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::UpdateCPTFormationItem(class UTeamFormationItem_C* PlayerStatsItem, class AMP_PlayerState_C* MP_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateCPTFormationItem");

	Params::MultiplayerMenu_C_UpdateCPTFormationItem Parms{};

	Parms.PlayerStatsItem = PlayerStatsItem;
	Parms.MP_PlayerState = MP_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateCPTPlayerListItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateCPTPlayerListItem(int32 PositionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateCPTPlayerListItem");

	Params::MultiplayerMenu_C_CreateCPTPlayerListItem Parms{};

	Parms.PositionIndex = PositionIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CaptainPlayerListItems_T2
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CaptainPlayerListItems_T2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CaptainPlayerListItems_T2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateCPTListItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCPTMenuPlayerItem_C*             ListItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMP_PlayerState_C*                MP_PlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::UpdateCPTListItem(class UCPTMenuPlayerItem_C* ListItem, class AMP_PlayerState_C* MP_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateCPTListItem");

	Params::MultiplayerMenu_C_UpdateCPTListItem Parms{};

	Parms.ListItem = ListItem;
	Parms.MP_PlayerState = MP_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CaptainPlayerListItems_T1
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CaptainPlayerListItems_T1()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CaptainPlayerListItems_T1");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CaptainPlayerList
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CaptainPlayerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CaptainPlayerList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateFormationItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTeamFormationItem_C*             PlayerStatsItem                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMP_PlayerState_C*                MP_PlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::UpdateFormationItem(class UTeamFormationItem_C* PlayerStatsItem, class AMP_PlayerState_C* MP_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateFormationItem");

	Params::MultiplayerMenu_C_UpdateFormationItem Parms{};

	Parms.PlayerStatsItem = PlayerStatsItem;
	Parms.MP_PlayerState = MP_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateStatsItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPlayerStatsItem_C*               PlayerStatsItem                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMP_PlayerState_C*                MP_PlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::UpdateStatsItem(class UPlayerStatsItem_C* PlayerStatsItem, class AMP_PlayerState_C* MP_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateStatsItem");

	Params::MultiplayerMenu_C_UpdateStatsItem Parms{};

	Parms.PlayerStatsItem = PlayerStatsItem;
	Parms.MP_PlayerState = MP_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateTeamListItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTeamListItem_C*                  ListItem                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AMP_PlayerState_C*                MP_PlayerState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::UpdateTeamListItem(class UTeamListItem_C* ListItem, class AMP_PlayerState_C* MP_PlayerState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateTeamListItem");

	Params::MultiplayerMenu_C_UpdateTeamListItem Parms{};

	Parms.ListItem = ListItem;
	Parms.MP_PlayerState = MP_PlayerState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.OpenMatchSummary
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::OpenMatchSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "OpenMatchSummary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_CloseMatchSummary_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_CloseMatchSummary_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_CloseMatchSummary_K2Node_ComponentBoundEvent_11_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateMatchSummary
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateMatchSummary()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateMatchSummary");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_Exit_1_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_Exit_1_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_Exit_1_K2Node_ComponentBoundEvent_10_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.StartUpdateMultiplayerMenuLoop
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::StartUpdateMultiplayerMenuLoop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "StartUpdateMultiplayerMenuLoop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateChatMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateChatMessage(const class FString& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateChatMessage");

	Params::MultiplayerMenu_C_CreateChatMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_Exit_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_Exit_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_Exit_K2Node_ComponentBoundEvent_9_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_ExitNo_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_ExitNo_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_ExitNo_K2Node_ComponentBoundEvent_8_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_ExitYes_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_ExitYes_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_ExitYes_K2Node_ComponentBoundEvent_7_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshCPTFormation
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshCPTFormation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshCPTFormation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateCPTFormationItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateCPTFormationItem(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateCPTFormationItem");

	Params::MultiplayerMenu_C_CreateCPTFormationItem Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateVotePanel
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateVotePanel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateVotePanel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_Settings_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_Settings_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_Settings_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MultiplayerMenu_Resume_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MultiplayerMenu_Resume_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MultiplayerMenu_Resume_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.AllChatPressed
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::AllChatPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "AllChatPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.TeamChatPressed
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::TeamChatPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "TeamChatPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RecieveChatMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SenderSteamID                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           MessageGroup                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           SwappingPlayerName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   SwappingPlayerTeam                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SwappingPlayerPosition                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::RecieveChatMessage(int32 MessageType, const class FString& SenderSteamID, int32 Team, const class FString& MessageGroup, const class FString& PlayerName, int32 Position, const class FString& Message, const class FString& SwappingPlayerName, int32 SwappingPlayerTeam, int32 SwappingPlayerPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RecieveChatMessage");

	Params::MultiplayerMenu_C_RecieveChatMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.SenderSteamID = std::move(SenderSteamID);
	Parms.Team = Team;
	Parms.MessageGroup = std::move(MessageGroup);
	Parms.PlayerName = std::move(PlayerName);
	Parms.Position = Position;
	Parms.Message = std::move(Message);
	Parms.SwappingPlayerName = std::move(SwappingPlayerName);
	Parms.SwappingPlayerTeam = SwappingPlayerTeam;
	Parms.SwappingPlayerPosition = SwappingPlayerPosition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshHostMenuPlayerList
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshHostMenuPlayerList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshHostMenuPlayerList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateHostListItems
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CreateHostListItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateHostListItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateLobbyInfo
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateLobbyInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateLobbyInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateHostMenu
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateHostMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateHostMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateCPTMenu
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateCPTMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateCPTMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateScorecard
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateScorecard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateScorecard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateMatchSettings
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateMatchSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateMatchSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateTeamStats
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateTeamStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateTeamStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateT2PlayerStatsItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateT2PlayerStatsItems(int32 PositionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateT2PlayerStatsItems");

	Params::MultiplayerMenu_C_CreateT2PlayerStatsItems Parms{};

	Parms.PositionIndex = PositionIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateT1PlayerStatsItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PositionIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateT1PlayerStatsItems(int32 PositionIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateT1PlayerStatsItems");

	Params::MultiplayerMenu_C_CreateT1PlayerStatsItems Parms{};

	Parms.PositionIndex = PositionIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateTeamInfo
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateTeamInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateTeamInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshSpectatorsList
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshSpectatorsList()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshSpectatorsList");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateT2FormationItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateT2FormationItem(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateT2FormationItem");

	Params::MultiplayerMenu_C_CreateT2FormationItem Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshT2Formation
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshT2Formation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshT2Formation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshT1Formation
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshT1Formation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshT1Formation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateT1FormationItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateT1FormationItem(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateT1FormationItem");

	Params::MultiplayerMenu_C_CreateT1FormationItem Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateSpectatorItem
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CreateSpectatorItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateSpectatorItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshT2List&PlayerStats
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshT2List_PlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshT2List&PlayerStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdatePlayers
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdatePlayers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdatePlayers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CloseMultiplayerMenu
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CloseMultiplayerMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CloseMultiplayerMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.OpenMultiplayerMenu
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::OpenMultiplayerMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "OpenMultiplayerMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MatchMenu_T2StatsButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MatchMenu_T2StatsButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MatchMenu_T2StatsButton_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MatchMenu_T1StatsButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MatchMenu_T1StatsButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MatchMenu_T1StatsButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MatchMenu_MatchInfoButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MatchMenu_MatchInfoButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MatchMenu_MatchInfoButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MatchMenu_CPTMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MatchMenu_CPTMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MatchMenu_CPTMenuButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.BndEvt__MatchMenu_HostMenuButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UMultiplayerMenu_C::BndEvt__MatchMenu_HostMenuButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "BndEvt__MatchMenu_HostMenuButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateT2ListItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateT2ListItems(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateT2ListItems");

	Params::MultiplayerMenu_C_CreateT2ListItems Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateT1ListItems
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CreateT1ListItems(int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateT1ListItems");

	Params::MultiplayerMenu_C_CreateT1ListItems Parms{};

	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MultiplayerMenu.MultiplayerMenu_C.UpdateMultiplayerMenu
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::UpdateMultiplayerMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "UpdateMultiplayerMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.RefreshT1List&PlayerStats
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::RefreshT1List_PlayerStats()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "RefreshT1List&PlayerStats");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CreateMenuItems
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::CreateMenuItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CreateMenuItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.Initialize
// (BlueprintCallable, BlueprintEvent)

void UMultiplayerMenu_C::Initialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "Initialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMultiplayerMenu_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam1PositionText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PositionIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Position                                               (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam1PositionText(int32 PositionIndex, class FText* Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam1PositionText");

	Params::MultiplayerMenu_C_CalculateTeam1PositionText Parms{};

	Parms.PositionIndex = PositionIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Position != nullptr)
		*Position = std::move(Parms.Position);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam1OccupiedButtonStyle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FComboBoxStyle                   ComboBoxStyle                                          (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam1OccupiedButtonStyle(struct FComboBoxStyle* ComboBoxStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam1OccupiedButtonStyle");

	Params::MultiplayerMenu_C_CalculateTeam1OccupiedButtonStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ComboBoxStyle != nullptr)
		*ComboBoxStyle = std::move(Parms.ComboBoxStyle);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam1AvailableButtonStyle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FButtonStyle                     ButtonStyle                                            (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam1AvailableButtonStyle(struct FButtonStyle* ButtonStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam1AvailableButtonStyle");

	Params::MultiplayerMenu_C_CalculateTeam1AvailableButtonStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonStyle != nullptr)
		*ButtonStyle = std::move(Parms.ButtonStyle);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam1FormationButtonStyle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FButtonStyle                     ButtonStyle                                            (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam1FormationButtonStyle(struct FButtonStyle* ButtonStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam1FormationButtonStyle");

	Params::MultiplayerMenu_C_CalculateTeam1FormationButtonStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonStyle != nullptr)
		*ButtonStyle = std::move(Parms.ButtonStyle);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam2PositionText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   PositionIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Position                                               (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam2PositionText(int32 PositionIndex, class FText* Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam2PositionText");

	Params::MultiplayerMenu_C_CalculateTeam2PositionText Parms{};

	Parms.PositionIndex = PositionIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Position != nullptr)
		*Position = std::move(Parms.Position);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam2OccupiedButtonStyle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FComboBoxStyle                   ComboBoxStyle                                          (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam2OccupiedButtonStyle(struct FComboBoxStyle* ComboBoxStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam2OccupiedButtonStyle");

	Params::MultiplayerMenu_C_CalculateTeam2OccupiedButtonStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ComboBoxStyle != nullptr)
		*ComboBoxStyle = std::move(Parms.ComboBoxStyle);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam2AvailableButtonStyle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FButtonStyle                     ButtonStyle                                            (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam2AvailableButtonStyle(struct FButtonStyle* ButtonStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam2AvailableButtonStyle");

	Params::MultiplayerMenu_C_CalculateTeam2AvailableButtonStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonStyle != nullptr)
		*ButtonStyle = std::move(Parms.ButtonStyle);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam2FormationButtonStyle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FButtonStyle                     ButtonStyle                                            (Parm, OutParm)

void UMultiplayerMenu_C::CalculateTeam2FormationButtonStyle(struct FButtonStyle* ButtonStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam2FormationButtonStyle");

	Params::MultiplayerMenu_C_CalculateTeam2FormationButtonStyle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ButtonStyle != nullptr)
		*ButtonStyle = std::move(Parms.ButtonStyle);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam1CaptainButtonEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Option                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CalculateTeam1CaptainButtonEnabled(bool* Enabled, class FString* Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam1CaptainButtonEnabled");

	Params::MultiplayerMenu_C_CalculateTeam1CaptainButtonEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;

	if (Option != nullptr)
		*Option = std::move(Parms.Option);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateTeam2CaptainButtonEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Enabled                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           Option                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CalculateTeam2CaptainButtonEnabled(bool* Enabled, class FString* Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateTeam2CaptainButtonEnabled");

	Params::MultiplayerMenu_C_CalculateTeam2CaptainButtonEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Enabled != nullptr)
		*Enabled = Parms.Enabled;

	if (Option != nullptr)
		*Option = std::move(Parms.Option);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateCaptainFormationSelections
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<struct FTeamFormation>           Formation                                              (Parm, OutParm)

void UMultiplayerMenu_C::CalculateCaptainFormationSelections(TArray<struct FTeamFormation>* Formation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateCaptainFormationSelections");

	Params::MultiplayerMenu_C_CalculateCaptainFormationSelections Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Formation != nullptr)
		*Formation = std::move(Parms.Formation);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculateMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MessageType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           MessageGroup                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Message                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   SwappingPlayerTeam                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           SwappingPlayerName                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   SwappingPlayerPosition                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SendMessage_                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           MessageOut                                             (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UMultiplayerMenu_C::CalculateMessage(int32 MessageType, const class FString& SteamID, int32 Team, const class FString& MessageGroup, const class FString& PlayerName, int32 Position, const class FString& Message, int32 SwappingPlayerTeam, const class FString& SwappingPlayerName, int32 SwappingPlayerPosition, bool* SendMessage_, class FString* MessageOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculateMessage");

	Params::MultiplayerMenu_C_CalculateMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.SteamID = std::move(SteamID);
	Parms.Team = Team;
	Parms.MessageGroup = std::move(MessageGroup);
	Parms.PlayerName = std::move(PlayerName);
	Parms.Position = Position;
	Parms.Message = std::move(Message);
	Parms.SwappingPlayerTeam = SwappingPlayerTeam;
	Parms.SwappingPlayerName = std::move(SwappingPlayerName);
	Parms.SwappingPlayerPosition = SwappingPlayerPosition;

	UObject::ProcessEvent(Func, &Parms);

	if (SendMessage_ != nullptr)
		*SendMessage_ = Parms.SendMessage_;

	if (MessageOut != nullptr)
		*MessageOut = std::move(Parms.MessageOut);
}


// Function MultiplayerMenu.MultiplayerMenu_C.CalculatePersonVoteText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PersonalVoteText1                                      (Parm, OutParm)
// class FText                             PersonalVoteText2                                      (Parm, OutParm)

void UMultiplayerMenu_C::CalculatePersonVoteText(class FText* PersonalVoteText1, class FText* PersonalVoteText2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MultiplayerMenu_C", "CalculatePersonVoteText");

	Params::MultiplayerMenu_C_CalculatePersonVoteText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PersonalVoteText1 != nullptr)
		*PersonalVoteText1 = std::move(Parms.PersonalVoteText1);

	if (PersonalVoteText2 != nullptr)
		*PersonalVoteText2 = std::move(Parms.PersonalVoteText2);
}

}

