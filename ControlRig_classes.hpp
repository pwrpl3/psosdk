#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ControlRig

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "ControlRig_structs.hpp"
#include "MovieSceneTracks_structs.hpp"
#include "MovieSceneTracks_classes.hpp"
#include "PropertyPath_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "LevelSequence_classes.hpp"
#include "AnimGraphRuntime_classes.hpp"
#include "DeveloperSettings_classes.hpp"
#include "MovieScene_structs.hpp"
#include "MovieScene_classes.hpp"


namespace SDK
{

// Class ControlRig.ControlRigComponent
// 0x00E0 (0x0530 - 0x0450)
class UControlRigComponent final : public UPrimitiveComponent
{
public:
	TSubclassOf<class UControlRig>                ControlRigClass;                                   // 0x0450(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPostInitializeDelegate;                          // 0x0458(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPreSetupDelegate;                                // 0x0468(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPostSetupDelegate;                               // 0x0478(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPreUpdateDelegate;                               // 0x0488(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnPostUpdateDelegate;                              // 0x0498(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FControlRigComponentMappedElement> MappedElements;                                    // 0x04A8(0x0010)(Edit, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	bool                                          bResetTransformBeforeTick;                         // 0x04B8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bResetInitialsBeforeSetup;                         // 0x04B9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateRigOnTick;                                  // 0x04BA(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUpdateInEditor;                                   // 0x04BB(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawBones;                                        // 0x04BC(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowDebugDrawing;                                 // 0x04BD(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E70[0x2];                                      // 0x04BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UControlRig*                            ControlRig;                                        // 0x04C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E71[0x68];                                     // 0x04C8(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddMappedCompleteSkeletalMesh(class USkeletalMeshComponent* SkeletalMeshComponent);
	void AddMappedComponents(const TArray<struct FControlRigComponentMappedComponent>& Components);
	void AddMappedElements(const TArray<struct FControlRigComponentMappedElement>& NewMappedElements);
	void AddMappedSkeletalMesh(class USkeletalMeshComponent* SkeletalMeshComponent, const TArray<struct FControlRigComponentMappedBone>& Bones, const TArray<struct FControlRigComponentMappedCurve>& Curves);
	void ClearMappedElements();
	bool DoesElementExist(class FName Param_Name, ERigElementType ElementType);
	struct FTransform GetBoneTransform(class FName BoneName, EControlRigComponentSpace Space);
	bool GetControlBool(class FName ControlName);
	float GetControlFloat(class FName ControlName);
	int32 GetControlInt(class FName ControlName);
	struct FTransform GetControlOffset(class FName ControlName, EControlRigComponentSpace Space);
	struct FVector GetControlPosition(class FName ControlName, EControlRigComponentSpace Space);
	class UControlRig* GetControlRig();
	struct FRotator GetControlRotator(class FName ControlName, EControlRigComponentSpace Space);
	struct FVector GetControlScale(class FName ControlName, EControlRigComponentSpace Space);
	struct FTransform GetControlTransform(class FName ControlName, EControlRigComponentSpace Space);
	struct FVector2D GetControlVector2D(class FName ControlName);
	TArray<class FName> GetElementNames(ERigElementType ElementType);
	struct FTransform GetInitialBoneTransform(class FName BoneName, EControlRigComponentSpace Space);
	struct FTransform GetInitialSpaceTransform(class FName SpaceName, EControlRigComponentSpace Space);
	struct FTransform GetSpaceTransform(class FName SpaceName, EControlRigComponentSpace Space);
	void Initialize();
	void OnPostInitialize(class UControlRigComponent* Component);
	void OnPostSetup(class UControlRigComponent* Component);
	void OnPostUpdate(class UControlRigComponent* Component);
	void OnPreSetup(class UControlRigComponent* Component);
	void OnPreUpdate(class UControlRigComponent* Component);
	void SetBoneInitialTransformsFromSkeletalMesh(class USkeletalMesh* InSkeletalMesh);
	void SetBoneTransform(class FName BoneName, const struct FTransform& Transform, EControlRigComponentSpace Space, float Weight, bool bPropagateToChildren);
	void SetControlBool(class FName ControlName, bool Value);
	void SetControlFloat(class FName ControlName, float Value);
	void SetControlInt(class FName ControlName, int32 Value);
	void SetControlOffset(class FName ControlName, const struct FTransform& OffsetTransform, EControlRigComponentSpace Space);
	void SetControlPosition(class FName ControlName, const struct FVector& Value, EControlRigComponentSpace Space);
	void SetControlRotator(class FName ControlName, const struct FRotator& Value, EControlRigComponentSpace Space);
	void SetControlScale(class FName ControlName, const struct FVector& Value, EControlRigComponentSpace Space);
	void SetControlTransform(class FName ControlName, const struct FTransform& Value, EControlRigComponentSpace Space);
	void SetControlVector2D(class FName ControlName, const struct FVector2D& Value);
	void SetInitialBoneTransform(class FName BoneName, const struct FTransform& InitialTransform, EControlRigComponentSpace Space, bool bPropagateToChildren);
	void SetInitialSpaceTransform(class FName SpaceName, const struct FTransform& InitialTransform, EControlRigComponentSpace Space);
	void SetMappedElements(const TArray<struct FControlRigComponentMappedElement>& NewMappedElements);
	void Update(float DeltaTime);

	float GetAbsoluteTime() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigComponent">();
	}
	static class UControlRigComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigComponent>();
	}
};

// Class ControlRig.ControlRig
// 0x0628 (0x0650 - 0x0028)
class UControlRig : public UObject
{
public:
	uint8                                         Pad_E8D[0x1D];                                     // 0x0028(0x001D)(Fixing Size After Last Property [ Dumper-7 ])
	ERigExecutionType                             ExecutionType;                                     // 0x0045(0x0001)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E8E[0x2];                                      // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class URigVM*                                 VM;                                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRigHierarchyContainer                 Hierarchy;                                         // 0x0050(0x0368)(NativeAccessSpecifierPrivate)
	TSoftObjectPtr<class UControlRigGizmoLibrary> GizmoLibrary;                                      // 0x03B8(0x0028)(UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E8F[0x10];                                     // 0x03E0(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, struct FCachedPropertyPath> InputProperties;                                   // 0x03F0(0x0050)(Deprecated, NativeAccessSpecifierPrivate)
	TMap<class FName, struct FCachedPropertyPath> OutputProperties;                                  // 0x0440(0x0050)(Deprecated, NativeAccessSpecifierPrivate)
	struct FControlRigDrawContainer               DrawContainer;                                     // 0x0490(0x0018)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_E90[0x18];                                     // 0x04A8(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationDataSourceRegistry*           DataSourceRegistry;                                // 0x04C0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                           EventQueue;                                        // 0x04C8(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E91[0x78];                                     // 0x04D8(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigInfluenceMapPerEvent               Influences;                                        // 0x0550(0x0060)(NativeAccessSpecifierPrivate)
	class UControlRig*                            InteractionRig;                                    // 0x05B0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UControlRig>                InteractionRigClass;                               // 0x05B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UAssetUserData*>                 AssetUserData;                                     // 0x05C0(0x0010)(Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_E92[0x80];                                     // 0x05D0(0x0080)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetInteractionRig(class UControlRig* InInteractionRig);
	void SetInteractionRigClass(TSubclassOf<class UControlRig> InInteractionRigClass);

	class UControlRig* GetInteractionRig() const;
	TSubclassOf<class UControlRig> GetInteractionRigClass() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRig">();
	}
	static class UControlRig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRig>();
	}
};

// Class ControlRig.ControlRigAnimInstance
// 0x0000 (0x02C0 - 0x02C0)
class UControlRigAnimInstance final : public UAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigAnimInstance">();
	}
	static class UControlRigAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigAnimInstance>();
	}
};

// Class ControlRig.AdditiveControlRig
// 0x0010 (0x0660 - 0x0650)
class UAdditiveControlRig final : public UControlRig
{
public:
	uint8                                         Pad_E93[0x10];                                     // 0x0650(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AdditiveControlRig">();
	}
	static class UAdditiveControlRig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAdditiveControlRig>();
	}
};

// Class ControlRig.ControlRigBlueprintGeneratedClass
// 0x0000 (0x0328 - 0x0328)
class UControlRigBlueprintGeneratedClass final : public UBlueprintGeneratedClass
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigBlueprintGeneratedClass">();
	}
	static class UControlRigBlueprintGeneratedClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigBlueprintGeneratedClass>();
	}
};

// Class ControlRig.ControlRigControlActor
// 0x0098 (0x02B8 - 0x0220)
class AControlRigControlActor final : public AActor
{
public:
	class AActor*                                 ActorToTrack;                                      // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UControlRig>                ControlRigClass;                                   // 0x0228(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRefreshOnTick;                                    // 0x0230(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsSelectable;                                     // 0x0231(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E94[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     MaterialOverride;                                  // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ColorParameter;                                    // 0x0240(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCastShadows;                                      // 0x0250(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E95[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        ActorRootComponent;                                // 0x0258(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UControlRig*                            ControlRig;                                        // 0x0260(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class FName>                           ControlNames;                                      // 0x0268(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<struct FTransform>                     GizmoTransforms;                                   // 0x0278(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	TArray<class UStaticMeshComponent*>           Components;                                        // 0x0288(0x0010)(ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class UMaterialInstanceDynamic*>       Materials;                                         // 0x0298(0x0010)(ZeroConstructor, Transient, NativeAccessSpecifierPrivate)
	class FName                                   ColorParameterName;                                // 0x02A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E96[0x8];                                      // 0x02B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void Clear();
	void Refresh();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigControlActor">();
	}
	static class AControlRigControlActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AControlRigControlActor>();
	}
};

// Class ControlRig.ControlRigGizmoActor
// 0x0028 (0x0248 - 0x0220)
class AControlRigGizmoActor final : public AActor
{
public:
	class USceneComponent*                        ActorRootComponent;                                // 0x0220(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   StaticMeshComponent;                               // 0x0228(0x0008)(Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32                                        ControlRigIndex;                                   // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ControlName;                                       // 0x0234(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ColorParameterName;                                // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         bEnabled : 1;                                      // 0x0244(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bSelected : 1;                                     // 0x0244(0x0001)(BitIndex: 0x01, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bSelectable : 1;                                   // 0x0244(0x0001)(BitIndex: 0x02, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         bHovered : 1;                                      // 0x0244(0x0001)(BitIndex: 0x03, PropSize: 0x0001 (BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate))
	uint8                                         Pad_E97[0x3];                                      // 0x0245(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEnabledChanged(bool BIsEnabled);
	void OnHoveredChanged(bool bIsSelected);
	void OnManipulatingChanged(bool bIsManipulating);
	void OnSelectionChanged(bool bIsSelected);
	void OnTransformChanged(const struct FTransform& NewTransform);
	void SetEnabled(bool bInEnabled);
	void SetGlobalTransform(const struct FTransform& InTransform);
	void SetHovered(bool bInHovered);
	void SetSelectable(bool bInSelectable);
	void SetSelected(bool bInSelected);

	struct FTransform GetGlobalTransform() const;
	bool IsEnabled() const;
	bool IsHovered() const;
	bool IsSelectedInEditor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigGizmoActor">();
	}
	static class AControlRigGizmoActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AControlRigGizmoActor>();
	}
};

// Class ControlRig.ControlRigGizmoLibrary
// 0x00B8 (0x00E0 - 0x0028)
class UControlRigGizmoLibrary final : public UObject
{
public:
	uint8                                         Pad_E98[0x8];                                      // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FControlRigGizmoDefinition             DefaultGizmo;                                      // 0x0030(0x0060)(Edit, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UMaterial>               DefaultMaterial;                                   // 0x0090(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   MaterialColorParameter;                            // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FControlRigGizmoDefinition>     Gizmos;                                            // 0x00C0(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_E99[0x10];                                     // 0x00D0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigGizmoLibrary">();
	}
	static class UControlRigGizmoLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigGizmoLibrary>();
	}
};

// Class ControlRig.ControlRigLayerInstance
// 0x0000 (0x02C0 - 0x02C0)
class UControlRigLayerInstance final : public UAnimInstance
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigLayerInstance">();
	}
	static class UControlRigLayerInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigLayerInstance>();
	}
};

// Class ControlRig.ControlRigValidationPass
// 0x0000 (0x0028 - 0x0028)
class UControlRigValidationPass : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigValidationPass">();
	}
	static class UControlRigValidationPass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigValidationPass>();
	}
};

// Class ControlRig.ControlRigNumericalValidationPass
// 0x0038 (0x0060 - 0x0028)
class UControlRigNumericalValidationPass final : public UControlRigValidationPass
{
public:
	bool                                          bCheckControls;                                    // 0x0028(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckBones;                                       // 0x0029(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bCheckCurves;                                      // 0x002A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9A[0x1];                                      // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TranslationPrecision;                              // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         RotationPrecision;                                 // 0x0030(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ScalePrecision;                                    // 0x0034(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CurvePrecision;                                    // 0x0038(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   EventNameA;                                        // 0x003C(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class FName                                   EventNameB;                                        // 0x0044(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E9B[0x4];                                      // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRigPose                               Pose;                                              // 0x0050(0x0010)(Transient, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigNumericalValidationPass">();
	}
	static class UControlRigNumericalValidationPass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigNumericalValidationPass>();
	}
};

// Class ControlRig.ControlRigObjectHolder
// 0x0010 (0x0038 - 0x0028)
class UControlRigObjectHolder final : public UObject
{
public:
	TArray<class UObject*>                        Objects;                                           // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigObjectHolder">();
	}
	static class UControlRigObjectHolder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigObjectHolder>();
	}
};

// Class ControlRig.ControlRigSequence
// 0x0058 (0x0220 - 0x01C8)
class UControlRigSequence final : public ULevelSequence
{
public:
	TSoftObjectPtr<class UAnimSequence>           LastExportedToAnimationSequence;                   // 0x01C8(0x0028)(AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class USkeletalMesh>           LastExportedUsingSkeletalMesh;                     // 0x01F0(0x0028)(AssetRegistrySearchable, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         LastExportedFrameRate;                             // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, AssetRegistrySearchable, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_E9C[0x4];                                      // 0x021C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigSequence">();
	}
	static class UControlRigSequence* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigSequence>();
	}
};

// Class ControlRig.ControlRigSequencerAnimInstance
// 0x0010 (0x02D0 - 0x02C0)
class UControlRigSequencerAnimInstance final : public UAnimSequencerInstance
{
public:
	uint8                                         Pad_E9D[0x10];                                     // 0x02C0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigSequencerAnimInstance">();
	}
	static class UControlRigSequencerAnimInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigSequencerAnimInstance>();
	}
};

// Class ControlRig.ControlRigSettings
// 0x0000 (0x0038 - 0x0038)
class UControlRigSettings final : public UDeveloperSettings
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigSettings">();
	}
	static class UControlRigSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigSettings>();
	}
};

// Class ControlRig.ControlRigValidator
// 0x0040 (0x0068 - 0x0028)
class UControlRigValidator final : public UObject
{
public:
	TArray<class UControlRigValidationPass*>      Passes;                                            // 0x0028(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E9E[0x30];                                     // 0x0038(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ControlRigValidator">();
	}
	static class UControlRigValidator* GetDefaultObj()
	{
		return GetDefaultObjImpl<UControlRigValidator>();
	}
};

// Class ControlRig.FKControlRig
// 0x0018 (0x0668 - 0x0650)
class UFKControlRig final : public UControlRig
{
public:
	TArray<bool>                                  IsControlActive;                                   // 0x0650(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	EControlRigFKRigExecuteMode                   ApplyMode;                                         // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_E9F[0x7];                                      // 0x0661(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"FKControlRig">();
	}
	static class UFKControlRig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFKControlRig>();
	}
};

// Class ControlRig.MovieSceneControlRigParameterSection
// 0x01A0 (0x02E8 - 0x0148)
class UMovieSceneControlRigParameterSection final : public UMovieSceneParameterSection
{
public:
	class UControlRig*                            ControlRig;                                        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TSubclassOf<class UControlRig>                ControlRigClass;                                   // 0x0150(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ControlsMask;                                      // 0x0158(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	struct FMovieSceneTransformMask               TransformMask;                                     // 0x0168(0x0004)(NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_EA0[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMovieSceneFloatChannel                Weight;                                            // 0x0170(0x00A0)(NativeAccessSpecifierPublic)
	TMap<class FName, struct FChannelMapInfo>     ControlChannelMap;                                 // 0x0210(0x0050)(NativeAccessSpecifierPublic)
	TArray<struct FEnumParameterNameAndCurve>     EnumParameterNamesAndCurves;                       // 0x0260(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FIntegerParameterNameAndCurve>  IntegerParameterNamesAndCurves;                    // 0x0270(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_EA1[0x68];                                     // 0x0280(0x0068)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneControlRigParameterSection">();
	}
	static class UMovieSceneControlRigParameterSection* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneControlRigParameterSection>();
	}
};

// Class ControlRig.MovieSceneControlRigParameterTrack
// 0x0038 (0x00C8 - 0x0090)
class UMovieSceneControlRigParameterTrack final : public UMovieSceneNameableTrack
{
public:
	uint8                                         Pad_EA2[0x10];                                     // 0x0090(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class UControlRig*                            ControlRig;                                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMovieSceneSection*                     SectionToKey;                                      // 0x00A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMovieSceneSection*>             Sections;                                          // 0x00B0(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class FName                                   TrackName;                                         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MovieSceneControlRigParameterTrack">();
	}
	static class UMovieSceneControlRigParameterTrack* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMovieSceneControlRigParameterTrack>();
	}
};

}

