#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SP_Character

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SP_PlayerAppearance_structs.hpp"
#include "SP_TeamAppearance_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SP_Character.SP_Character_C
// 0x0A00 (0x0EC0 - 0x04C0)
class ASP_Character_C final : public ACharacter
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          FootHitbox_L;                                      // 0x04C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          FootHitbox_R;                                      // 0x04D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       NameTagBack;                                       // 0x04D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       NameTagFront;                                      // 0x04E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UWidgetComponent*                       ShirtData;                                         // 0x04E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          GkDiveHitbox;                                      // 0x04F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          GkCatchHitbox;                                     // 0x04F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          FootHitbox;                                        // 0x0500(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0508(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       OnestPersonCamera;                                 // 0x0510(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 FacialHair;                                        // 0x0518(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair;                                              // 0x0520(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shoes;                                             // 0x0528(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Socks;                                             // 0x0530(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shorts;                                            // 0x0538(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Wristbands;                                        // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Gloves;                                            // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shirt;                                             // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       ThreerdPersonCamera;                               // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimTC_Location_93EE21094C72ABBA06A2B389545CE035; // 0x0560(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimTC_Rotation_93EE21094C72ABBA06A2B389545CE035; // 0x056C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimTC__Direction_93EE21094C72ABBA06A2B389545CE035; // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2595[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimTC;                                // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimMR_Location_B6FCD4334121A50A64E1CE9ECD1C1B33; // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimMR_Rotation_B6FCD4334121A50A64E1CE9ECD1C1B33; // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimMR__Direction_B6FCD4334121A50A64E1CE9ECD1C1B33; // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2596[0x7];                                     // 0x0591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimMR;                                // 0x0598(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimBR_Location_A675D96746E540B14CF9B0B8F24C28DE; // 0x05A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimBR_Rotation_A675D96746E540B14CF9B0B8F24C28DE; // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimBR__Direction_A675D96746E540B14CF9B0B8F24C28DE; // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2597[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimBR;                                // 0x05B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimBL_Location_DF68DFCF48B790BB10B76A8BC08E842D; // 0x05C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimBL_Rotation_DF68DFCF48B790BB10B76A8BC08E842D; // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimBL__Direction_DF68DFCF48B790BB10B76A8BC08E842D; // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2598[0x7];                                     // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimBL;                                // 0x05D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimTL_Location_8988DC44447E448C07CBB489784564B6; // 0x05E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimTL_Rotation_8988DC44447E448C07CBB489784564B6; // 0x05EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimTL__Direction_8988DC44447E448C07CBB489784564B6; // 0x05F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2599[0x7];                                     // 0x05F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimTL;                                // 0x05F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimTR_Location_279A67F74364D707FD9DCD84D7BE45D9; // 0x0600(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimTR_Rotation_279A67F74364D707FD9DCD84D7BE45D9; // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimTR__Direction_279A67F74364D707FD9DCD84D7BE45D9; // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259A[0x7];                                     // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimTR;                                // 0x0618(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GkDiveHitboxAnimML_Location_D5CC09D049940B1CFFABEB9639E7B8DC; // 0x0620(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveHitboxAnimML_Rotation_D5CC09D049940B1CFFABEB9639E7B8DC; // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveHitboxAnimML__Direction_D5CC09D049940B1CFFABEB9639E7B8DC; // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259B[0x7];                                     // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveHitboxAnimML;                                // 0x0638(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDiveMoment_Track_9957D5B84F66F1A3DAC76DAFC20FBFA9; // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            GkDiveMoment__Direction_9957D5B84F66F1A3DAC76DAFC20FBFA9; // 0x0644(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259C[0x3];                                     // 0x0645(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     GkDiveMoment;                                      // 0x0648(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DropKickMovementTimeline__Direction_49761BD148AB643C21B02198B24BE8C6; // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259D[0x7];                                     // 0x0651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DropKickMovementTimeline;                          // 0x0658(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlideTackleTimeline_Track_23AA2CA74AA9BCBBCE40068A27B0E480; // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SlideTackleTimeline__Direction_23AA2CA74AA9BCBBCE40068A27B0E480; // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259E[0x3];                                     // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SlideTackleTimeline;                               // 0x0668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 PlayerSessionId;                                   // 0x0670(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 PlayerName;                                        // 0x0680(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         Team;                                              // 0x0690(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Position;                                          // 0x0694(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimHorizontal;                                    // 0x0698(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AnimVertical;                                      // 0x069C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimHorizontal;                                     // 0x06A0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AimVertical;                                       // 0x06A4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AuxHorizontal;                                     // 0x06A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AuxVertical;                                       // 0x06AC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InputEnabled;                                      // 0x06B0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259F[0x7];                                     // 0x06B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASoccerBall_C*                          Gk_Ball;                                           // 0x06B8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GkState;                                           // 0x06C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SprintButtonPressed_;                              // 0x06C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Sprinting;                                         // 0x06C5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A0[0x2];                                     // 0x06C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Stamina;                                           // 0x06C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StaminaCooldown;                                   // 0x06CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AbilityActive;                                     // 0x06CD(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A1[0x2];                                     // 0x06CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AbilityState;                                      // 0x06D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MovementState;                                     // 0x06D4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASP_Controller_C*                       SP_Controller;                                     // 0x06D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerState_C*                      MP_PlayerState;                                    // 0x06E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASoccerBall_C*                          PersonalBall;                                      // 0x06E8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PenaltyState;                                      // 0x06F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OffSide;                                           // 0x06F4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A2[0x3];                                     // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OffSide_Location;                                  // 0x06F8(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FoulState;                                         // 0x0704(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GkButtonPressed;                                   // 0x0708(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Dive;                                              // 0x0709(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Gk_TeamPassTrue;                                   // 0x070A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          PerryCoolDown;                                     // 0x070B(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ThrowingIn;                                        // 0x070C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A3[0x3];                                     // 0x070D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReleasePower;                                      // 0x0710(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A4[0x4];                                     // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASoccerBall_C*                          SoccerBall;                                        // 0x0718(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KickPowerMultiplier;                               // 0x0720(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OnestPersonCam;                                    // 0x0724(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RightFootstepSound;                                // 0x0725(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A5[0x2];                                     // 0x0726(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DribblePowerMultiplier;                            // 0x0728(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         KickControlSensitivity;                            // 0x072C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingChargePower;                                // 0x0730(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingChargeHeightSensitivity;                    // 0x0734(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingChargeCurveSensitivity;                     // 0x0738(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingChargeHorizontalAim;                        // 0x073C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HoldingChargeVerticalAim;                          // 0x0740(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HoldingChargeKickType;                             // 0x0744(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HoldingCharge;                                     // 0x0748(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HoldingChargeApplied;                              // 0x0749(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          KickCoolDown;                                      // 0x074A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A6[0x1];                                     // 0x074B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         KickState;                                         // 0x074C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HitboxType;                                        // 0x0750(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BodyHitSoundCoolDown;                              // 0x0754(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A7[0x3];                                     // 0x0755(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GkRollMultiplier;                                  // 0x0758(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkThrowMultiplier;                                 // 0x075C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GkDropKickMultiplier;                              // 0x0760(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BodyCollisionCooldown;                             // 0x0764(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          FoulCoolDown;                                      // 0x0765(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A8[0x2];                                     // 0x0766(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EmoteState;                                        // 0x0768(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckFoulCoolDown;                                 // 0x076C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25A9[0x3];                                     // 0x076D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSP_PlayerAppearance                   SP_PlayerAppearance;                               // 0x0770(0x00A8)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSP_TeamAppearance                     SP_TeamAppearance;                                 // 0x0818(0x00A0)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<int32, struct FLinearColor>              SP_EyeColor;                                       // 0x08B8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_HairStyle;                                      // 0x0908(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_HairTexture;                                    // 0x0958(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_FacialHairStyle;                                // 0x09A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_FacialHairTexture;                              // 0x09F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_ShirtStyle;                                     // 0x0A48(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TurnDecelMultiplier;                               // 0x0A98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TouchDecelMultiplier;                              // 0x0A9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpDecelMultiplier;                               // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25AA[0x4];                                     // 0x0AA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, class UTexture*>                  SP_ShirtPatterns;                                  // 0x0AA8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_ShortsStyle;                                    // 0x0AF8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_ShortsPatternsMid;                              // 0x0B48(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_ShortsPatternsLow;                              // 0x0B98(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_ShortsPatternsHigh;                             // 0x0BE8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_SocksStyle;                                     // 0x0C38(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_SocksPatternsMid;                               // 0x0C88(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_SocksPatternsHigh;                              // 0x0CD8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_SocksPatternsLow;                               // 0x0D28(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_ShoesDIF;                                       // 0x0D78(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class UTexture*>                  SP_ShoesNRM;                                       // 0x0DC8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_GlovesStyle;                                    // 0x0E18(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, class USkeletalMesh*>             SP_WristBandsStyle;                                // 0x0E68(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          PlayerRecieved;                                    // 0x0EB8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_SP_Character(int32 EntryPoint);
	void RecievePlayerInfo(class ASP_Controller_C* Param_SP_Controller, const class FString& Param_PlayerSessionId, const class FString& Param_PlayerName, int32 Param_Team, int32 Param_Position);
	void BndEvt__SP_Character_Mesh_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CapsuleHit(class AActor* OtherActor);
	void BodyCollisionOverlap(class AActor* Other_Actor);
	void PlayBodyHitSound(float Velocity);
	void PlayBodyHitSound_All(const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier);
	void CheckJumpExit();
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void Set_SP_Controller_Server(class ASP_Controller_C* Param_SP_Controller);
	void Set_SP_Controller_Client(class ASP_Controller_C* Param_SP_Controller);
	void DestroySelf();
	void ReceiveUnpossessed(class AController* OldController);
	void LeftFootstep();
	void PlayFootstepSound_All(const struct FVector& Location, const struct FRotator& Rotation, float VolumeMultiplier);
	void RightFootstep();
	void Recieve_UserSettings(float OnestPersonFOV, float ThreerdPersonFOV, float ThreerdPersonDistance, float ThreerdPersonHeight);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ResetCapsule();
	void SetFeetHitboxesScale_02();
	void SetFeetHitboxesScale_01();
	void CheckSprinting();
	void GkDiveButtonPressed();
	void SprintTick();
	void SubtractAbilityStamina();
	void ResetStaminaClient();
	void JumpPressed(int32 GkDiveButton, float Param_AnimHorizontal, float Param_AnimVertical);
	void SprintButtonReleased();
	void SprintButtonPressed();
	void StaminaTick();
	void CheckFoul(class AActor* OtherActor);
	void ClampCamera();
	void Enable3rdPersonCamera();
	void Distance(float TP_Distance, float TP_Height);
	void Set3rdPersonFOV(float FOV);
	void Set1stPersonFOV(float FOV);
	void Enable1stPersonCamera();
	void ToggleCamera();
	void PlaySlideTackleSound();
	void BicycleKickKick(class ASoccerBall_C* Param_SoccerBall);
	void SlideTackleKick(class ASoccerBall_C* Target);
	void BndEvt__FootHitbox_R_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__FootHitbox_L_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Add_Movement_Input(const struct FVector& WorldDirection, float ScaleValue);
	void EnterJump();
	void Set_InputEnabled(bool Param_InputEnabled);
	void Set_AbilityActive(bool Param_AbilityActive);
	void Set_MovementState(int32 Param_MovementState);
	void Set_AbilityState(int32 Param_AbilityState);
	void EnterTrip();
	void EnterBicycleKick(float Param_AnimHorizontal);
	void ExitAbility();
	void SlideTackleMovement(float Param_AnimHorizontal);
	void EnterSlideTackle(float Param_AnimHorizontal);
	void SlideTacklePressed(int32 GkDiveButton, float HorizontalMovement, float VerticalMovement);
	void Set_AimHorizontal(float Param_AimHorizontal);
	void Set_AimVertical(float Param_AimVertical);
	void Set_AnimVertical(float AnimForward);
	void Set_AnimHorizontal(float Param_AnimHorizontal);
	void VerticalAim(float Param_VerticalAim);
	void HorizontalAim(float Param_HorizontalAim);
	void PlayerMovement(float VerticalValue, float HorizontalValue, class ASP_Controller_C* Param_SP_Controller);
	void EnterRun(class UCharacterMovementComponent* CharacterMovementComponent);
	void EnterSprint(class UCharacterMovementComponent* CharacterMovementComponent);
	void StartTouchSlowDown();
	void DestroyPersonalBall();
	void SpawnBall();
	void CheckSpawnBall();
	void Start_KickChargeHold(int32 Param_HoldingChargeKickType, float Param_HoldingChargePower, float Param_HoldingChargeHeightSensitivity, float Param_HoldingChargeCurveSensitivity, float Param_HoldingChargeVerticalAim, float Param_HoldingChargeHorizontalAim);
	void StartKickCoolDown();
	void ExitKick();
	void Set_KickState(int32 Param_KickState);
	void FootHitbox_Overlap(class AActor* OtherActor);
	void Set_SoccerBallServer(class ASoccerBall_C* Param_SoccerBall);
	void Set_SoccerBallClient(class ASoccerBall_C* Param_SoccerBall);
	void BndEvt__FootHitbox_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__FootHitbox_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Kick(int32 KickType, float KickPower, float HeightSens, float CurveSens, float Movement, float Movement_0);
	void Func_PerryCoolDown();
	void StartGkDiveHitboxAnim(int32 DiveDirection);
	void Set_AuxVariables(float Param_AuxHorizontal, float Param_AuxVertical);
	void Gk_PerryImpulse(class ASoccerBall_C* Param_SoccerBall, class ASP_Character_C* SP_Character);
	void GkEnterPerry(float Param_AuxHorizontal, float Param_AuxVertical, class ASoccerBall_C* Param_SoccerBall, class ASP_Character_C* SP_Character);
	void StopGkDiveMovement();
	void ExitThrowInPickup();
	void ThrowInPickupBall();
	void IgnoreThrowInShield(class UPrimitiveComponent* Param_CapsuleComponent);
	void BlockThrowInShield(class UPrimitiveComponent* Param_CapsuleComponent);
	void CheckCrowdRoar();
	void Gk_StopMovement(class UMovementComponent* Target);
	void EnableBallCollision(class UPrimitiveComponent* Target);
	void DisableBallCollision(class UPrimitiveComponent* Target);
	void GkExitCatchServer(class UCharacterMovementComponent* CharacterMovementComponent);
	void Gk_EnterDive(float Param_AnimHorizontal, float Param_AnimVertical);
	void Gk_ExitRelease();
	void Impulse(class AActor* OtherActor);
	void BndEvt__GkHitBox1_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Gk_ExitDive_Server(class UCharacterMovementComponent* CharacterMovementComponent);
	void Func_Dive_0(bool Param_Dive);
	void EnterThrowInPickup(class ASoccerBall_C* Param_SoccerBall);
	void Set_GkState(int32 Param_GkState);
	void GkEnterCatch(class ASP_Character_C* Character, class ASoccerBall_C* Param_SoccerBall, float Param_AuxHorizontal, float Param_AuxVertical);
	void GkExitCatch();
	void Perry(class AActor* OtherActor);
	void Gk_ExitDive_Client();
	void GK_DiveMovement(float Anim_Horizontal);
	void Set_PenaltyState(int32 Param_PenaltyState);
	void StartDropKickMovement();
	void Gk_Release();
	void Gk_EnterRelease(float Param_ReleasePower, int32 Gk_State);
	void Set_Gk_Ball_Client(class ASoccerBall_C* Param_SoccerBall);
	void Set_Gk_Ball_Server(class ASoccerBall_C* Param_SoccerBall);
	void BndEvt__GkHitBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Set_GkButtonPressed(bool Param_GkButtonPressed);
	void UpdateShoesAppearance(int32 ShoeStyle);
	void UpdateSocksAppearance(const int32& SocksStyle, int32 BodySize, int32 ShoeStyle, const int32& SocksPattern, const struct FLinearColor& Color1, const struct FLinearColor& Color2);
	void UpdateShortsAppearance(const int32& ShortsStyle, int32 BodySize, float SkinTone, const int32& ShortsPattern, const struct FLinearColor& Color1, const struct FLinearColor& Color2);
	void UpdateHeadAppearance(int32 HeadType, int32 BodySize, float SkinTone, const int32& EyeColor, int32 HairStyle, const struct FLinearColor& HairColor, int32 FacialHairStyle, const struct FLinearColor& FacialHairColor);
	void RecieveSP_PlayerAppearance(const struct FSP_PlayerAppearance& Param_SP_PlayerAppearance);
	void RecieveSP_TeamAppearance(const struct FSP_TeamAppearance& Param_SP_TeamAppearance);
	void ApplySP_Appearance();
	void RecieveSP_AppearanceCombined(const struct FSP_PlayerAppearance& Param_SP_PlayerAppearance, const struct FSP_TeamAppearance& Param_SP_TeamAppearance);
	void UpdateShirtAppearance(int32 ShirtStyle, bool ShirtTuckedIn_, int32 BodySize, float SkinTone, const int32& ShirtPattern, const struct FLinearColor& ShirtColor1, const struct FLinearColor& ShirtColor2, const class FText& Param_PlayerName, const class FText& PlayerNumber, int32 ShirtFontStyle, const struct FSlateColor& ShirtFontColor, int32 ShirtFontFrontNumber);
	void SetNameTag(const class FString& Param_PlayerName);
	void EnterSlideEmote(int32 Param_EmoteState);
	void Exit_Emote();
	void Set_EmoteState(int32 Param_EmoteState);
	void UpdateWristbandsAppearance(int32 Param_Wristbands, const struct FLinearColor& Color);
	void UpdateGlovesAppearance(int32 Param_Position, int32 Param_Gloves, const struct FLinearColor& Color);
	void UpdateFacialHairAppearance(int32 FacialHairStyle, const struct FLinearColor& FacialHairColor);
	void UpdateHairAppearance(int32 HairStyle, const struct FLinearColor& HairColor);
	void Set_SkinTone(float SkinTone);
	void SetTeamCollision();
	void SlideTackleTimeline__UpdateFunc();
	void SlideTackleTimeline__FinishedFunc();
	void GkDiveHitboxAnimTC__UpdateFunc();
	void GkDiveHitboxAnimTC__FinishedFunc();
	void GkDiveHitboxAnimBL__UpdateFunc();
	void GkDiveHitboxAnimBL__FinishedFunc();
	void GkDiveHitboxAnimBR__UpdateFunc();
	void GkDiveHitboxAnimBR__FinishedFunc();
	void GkDiveHitboxAnimMR__UpdateFunc();
	void GkDiveHitboxAnimMR__FinishedFunc();
	void GkDiveHitboxAnimML__UpdateFunc();
	void GkDiveHitboxAnimML__FinishedFunc();
	void GkDiveHitboxAnimTR__UpdateFunc();
	void GkDiveHitboxAnimTR__FinishedFunc();
	void GkDiveHitboxAnimTL__UpdateFunc();
	void GkDiveHitboxAnimTL__FinishedFunc();
	void GkDiveMoment__UpdateFunc();
	void GkDiveMoment__FinishedFunc();
	void DropKickMovementTimeline__UpdateFunc();
	void DropKickMovementTimeline__FinishedFunc();
	void UserConstructionScript();
	void Calculate_MovementMultiplier(float* MovementMultiplier);
	void Calculate_TurnDeceleration(float HorizontalAim, float* Param_TurnDecelMultiplier);
	void Calculate_KickAnimation(float KickPower);
	void Calculate_DribbleAnimation();
	void Calculate_KickImpulse(float KickPower, float HeightSensitivity, float CurveSens, float VerticalAim, float HorizontalAim, class AActor* Param_SoccerBall, struct FVector* Kick, struct FVector* Curve);
	void Calculate_DribbleImpulse(float KickPower, float ForwardMovement, float HorizontalMovement, class AActor* Param_SoccerBall, struct FVector* Dribble);
	void Calculate_JuggleImpulse(float KickPower, float ForwardMovement, float HorizontalMovement, class AActor* Param_SoccerBall, struct FVector* Dribble);
	void Calculate_SlideTackleKickImpulse(float HorizontalMovement, class AActor* Param_SoccerBall, struct FVector* Kick);
	void Calculate_BicycleKickImpulse(float HorizontalMovement, class AActor* Param_SoccerBall, struct FVector* Kick);
	void Func_Dive(bool Param_InputEnabled, int32 Param_Position, int32 Param_Team, int32 Param_PenaltyState, int32 Param_GkState, bool* Param_Dive);
	void Calculate_GkCatchAnimation(class ASP_Character_C* Character, class ASoccerBall_C* Param_SoccerBall, float* Param_AnimHorizontal, float* Param_AnimVertical);
	void Calculate_GkPerryImpulse(class ASoccerBall_C* Param_SoccerBall, struct FVector* Kick);
	void Calculate_GkDropKickImpulse(float Param_ReleasePower, struct FVector* KickVector);
	void Calculate_GkThrowImpulse(float Param_ReleasePower, struct FVector* Back);
	void Calculate_GkRollImpulse(float Param_ReleasePower, struct FVector* KickVector);
	void RoundAuxVariables(float AuxHorizontalIn, float AuxVerticalIn, float* AuxHorizontalOut, float* AuxVerticalOut);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SP_Character_C">();
	}
	static class ASP_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASP_Character_C>();
	}
};

}

