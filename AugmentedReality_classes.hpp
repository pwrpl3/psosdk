#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AugmentedReality

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "AugmentedReality_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class AugmentedReality.ARActor
// 0x0000 (0x0220 - 0x0220)
class AARActor final : public AActor
{
public:
	class UARComponent* AddARComponent(TSubclassOf<class UARComponent> InComponentClass, const struct FGuid& NativeID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARActor">();
	}
	static class AARActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARActor>();
	}
};

// Class AugmentedReality.ARBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UARBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool AddManualEnvironmentCaptureProbe(const struct FVector& Location, const struct FVector& Extent);
	static class UARCandidateImage* AddRuntimeCandidateImage(class UARSessionConfig* SessionConfig, class UTexture2D* CandidateTexture, const class FString& FriendlyName, float PhysicalWidth);
	static bool AddTrackedPointWithName(const struct FTransform& WorldTransform, const class FString& PointName, bool bDeletePointsWithSameName);
	static void CalculateAlignmentTransform(const struct FTransform& TransformInFirstCoordinateSystem, const struct FTransform& TransformInSecondCoordinateSystem, struct FTransform* AlignmentTransform);
	static void CalculateClosestIntersection(const TArray<struct FVector>& StartPoints, const TArray<struct FVector>& EndPoints, struct FVector* ClosestIntersection);
	static void DebugDrawPin(class UARPin* ARPin, class UObject* WorldContextObject, const struct FLinearColor& Color, float Scale, float PersistForSeconds);
	static void DebugDrawTrackedGeometry(class UARTrackedGeometry* TrackedGeometry, class UObject* WorldContextObject, const struct FLinearColor& Color, float OutlineThickness, float PersistForSeconds);
	static TArray<class UARTrackedPoint*> FindTrackedPointsByName(const class FString& PointName);
	static struct FTransform GetAlignmentTransform();
	static TArray<class UARTrackedGeometry*> GetAllGeometries();
	static TArray<class UARTrackedGeometry*> GetAllGeometriesByClass(TSubclassOf<class UARTrackedGeometry> GeometryClass);
	static TArray<class UARPin*> GetAllPins();
	static TArray<struct FARPose2D> GetAllTracked2DPoses();
	static TArray<class UAREnvironmentCaptureProbe*> GetAllTrackedEnvironmentCaptureProbes();
	static TArray<class UARTrackedImage*> GetAllTrackedImages();
	static TArray<class UARPlaneGeometry*> GetAllTrackedPlanes();
	static TArray<class UARTrackedPoint*> GetAllTrackedPoints();
	static TArray<class UARTrackedPose*> GetAllTrackedPoses();
	static struct FARSessionStatus GetARSessionStatus();
	static class UARTexture* GetARTexture(EARTextureType TextureType);
	static float GetARWorldScale();
	static class UARTextureCameraDepth* GetCameraDepth();
	static class UARTextureCameraImage* GetCameraImage();
	static bool GetCameraIntrinsics(struct FARCameraIntrinsics* OutCameraIntrinsics);
	static class UARLightEstimate* GetCurrentLightEstimate();
	static int32 GetNumberOfTrackedFacesSupported();
	static bool GetObjectClassificationAtLocation(const struct FVector& InWorldLocation, EARObjectClassification* OutClassification, struct FVector* OutClassificationLocation, float MaxLocationDiff);
	static class UARTexture* GetPersonSegmentationDepthImage();
	static class UARTexture* GetPersonSegmentationImage();
	static TArray<struct FVector> GetPointCloud();
	static class UARSessionConfig* GetSessionConfig();
	static TArray<struct FARVideoFormat> GetSupportedVideoFormats(EARSessionType SessionType);
	static EARTrackingQuality GetTrackingQuality();
	static EARTrackingQualityReason GetTrackingQualityReason();
	static EARWorldMappingState GetWorldMappingStatus();
	static bool IsARPinLocalStoreReady();
	static bool IsARPinLocalStoreSupported();
	static bool IsARSupported();
	static bool IsSceneReconstructionSupported(EARSessionType SessionType, EARSceneReconstruction SceneReconstructionMethod);
	static bool IsSessionTrackingFeatureSupported(EARSessionType SessionType, EARSessionTrackingFeature SessionTrackingFeature);
	static bool IsSessionTypeSupported(EARSessionType SessionType);
	static TArray<struct FARTraceResult> LineTraceTrackedObjects(const struct FVector2D& ScreenCoord, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon);
	static TArray<struct FARTraceResult> LineTraceTrackedObjects3D(const struct FVector& Start, const struct FVector& End, bool bTestFeaturePoints, bool bTestGroundPlane, bool bTestPlaneExtents, bool bTestPlaneBoundaryPolygon);
	static TMap<class FName, class UARPin*> LoadARPinsFromLocalStore();
	static void PauseARSession();
	static class UARPin* PinComponent(class USceneComponent* ComponentToPin, const struct FTransform& PinToWorldTransform, class UARTrackedGeometry* TrackedGeometry, const class FName DebugName);
	static bool PinComponentToARPin(class USceneComponent* ComponentToPin, class UARPin* Pin);
	static class UARPin* PinComponentToTraceResult(class USceneComponent* ComponentToPin, const struct FARTraceResult& TraceResult, const class FName DebugName);
	static void RemoveAllARPinsFromLocalStore();
	static void RemoveARPinFromLocalStore(class FName InSaveName);
	static void RemovePin(class UARPin* PinToRemove);
	static struct FIntPoint ResizeXRCamera(const struct FIntPoint& InSize);
	static bool SaveARPinToLocalStore(class FName InSaveName, class UARPin* InPin);
	static void SetAlignmentTransform(const struct FTransform& InAlignmentTransform);
	static void SetARWorldOriginLocationAndRotation(const struct FVector& OriginLocation, const struct FRotator& OriginRotation, bool bIsTransformInWorldSpace, bool bMaintainUpDirection);
	static void SetARWorldScale(float InWorldScale);
	static void SetEnabledXRCamera(bool bOnOff);
	static void StartARSession(class UARSessionConfig* SessionConfig);
	static void StopARSession();
	static bool ToggleARCapture(const bool bOnOff, const EARCaptureType CaptureType);
	static void UnpinComponent(class USceneComponent* ComponentToUnpin);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARBlueprintLibrary">();
	}
	static class UARBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBlueprintLibrary>();
	}
};

// Class AugmentedReality.ARTraceResultLibrary
// 0x0000 (0x0028 - 0x0028)
class UARTraceResultLibrary final : public UBlueprintFunctionLibrary
{
public:
	static float GetDistanceFromCamera(const struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalToTrackingTransform(const struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalToWorldTransform(const struct FARTraceResult& TraceResult);
	static struct FTransform GetLocalTransform(const struct FARTraceResult& TraceResult);
	static EARLineTraceChannels GetTraceChannel(const struct FARTraceResult& TraceResult);
	static class UARTrackedGeometry* GetTrackedGeometry(const struct FARTraceResult& TraceResult);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTraceResultLibrary">();
	}
	static class UARTraceResultLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTraceResultLibrary>();
	}
};

// Class AugmentedReality.ARBaseAsyncTaskBlueprintProxy
// 0x0020 (0x0050 - 0x0030)
class UARBaseAsyncTaskBlueprintProxy : public UBlueprintAsyncActionBase
{
public:
	uint8                                         Pad_1AF1[0x20];                                    // 0x0030(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARBaseAsyncTaskBlueprintProxy">();
	}
	static class UARBaseAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBaseAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARSaveWorldAsyncTaskBlueprintProxy
// 0x0030 (0x0080 - 0x0050)
class UARSaveWorldAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF2[0x10];                                    // 0x0070(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UARSaveWorldAsyncTaskBlueprintProxy* ARSaveWorld(class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSaveWorldAsyncTaskBlueprintProxy">();
	}
	static class UARSaveWorldAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARSaveWorldAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARGetCandidateObjectAsyncTaskBlueprintProxy
// 0x0048 (0x0098 - 0x0050)
class UARGetCandidateObjectAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF3[0x28];                                    // 0x0070(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UARGetCandidateObjectAsyncTaskBlueprintProxy* ARGetCandidateObject(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& Extent);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARGetCandidateObjectAsyncTaskBlueprintProxy">();
	}
	static class UARGetCandidateObjectAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGetCandidateObjectAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARComponent
// 0x0080 (0x0280 - 0x0200)
#pragma pack(push, 0x1)
class alignas(0x10) UARComponent : public USceneComponent
{
public:
	struct FGuid                                  NativeID;                                          // 0x01F8(0x0010)(Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1AF4[0x30];                                    // 0x0208(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bUseDefaultReplication;                            // 0x0238(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AF5[0x7];                                     // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DefaultMeshMaterial;                               // 0x0240(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultWireframeMeshMaterial;                      // 0x0248(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMRMeshComponent*                       MRMeshComponent;                                   // 0x0250(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UARTrackedGeometry*                     MyTrackedGeometry;                                 // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AF6[0x18];                                    // 0x0260(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMRMeshComponent* GetMRMesh();
	void OnRep_Payload();
	void ReceiveRemove();
	void SetNativeID(const struct FGuid& Param_NativeID);
	void UpdateVisualization();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARComponent">();
	}
	static class UARComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARComponent>();
	}
};
#pragma pack(pop)

// Class AugmentedReality.ARPlaneComponent
// 0x0080 (0x0300 - 0x0280)
class UARPlaneComponent final : public UARComponent
{
public:
	uint8                                         Pad_1AF7[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARPlaneUpdatePayload                  ReplicatedPayload;                                 // 0x0280(0x0080)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static const TMap<EARObjectClassification, struct FLinearColor> GetObjectClassificationDebugColors();
	static void SetObjectClassificationDebugColors(const TMap<EARObjectClassification, struct FLinearColor>& InColors);
	static void SetPlaneComponentDebugMode(EPlaneComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARPlaneUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARPlaneUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARPlaneUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPlaneComponent">();
	}
	static class UARPlaneComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPlaneComponent>();
	}
};

// Class AugmentedReality.ARPointComponent
// 0x0000 (0x0280 - 0x0280)
class UARPointComponent final : public UARComponent
{
public:
	struct FARPointUpdatePayload                  ReplicatedPayload;                                 // 0x0278(0x0001)(BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AF8[0x7];                                     // 0x0279(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ReceiveAdd(const struct FARPointUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARPointUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARPointUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPointComponent">();
	}
	static class UARPointComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPointComponent>();
	}
};

// Class AugmentedReality.ARFaceComponent
// 0x0060 (0x02E0 - 0x0280)
class UARFaceComponent final : public UARComponent
{
public:
	EARFaceTransformMixing                        TransformSetting;                                  // 0x0278(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bUpdateVertexNormal;                               // 0x0279(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bFaceOutOfScreen;                                  // 0x027A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AF9[0x5];                                     // 0x027B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARFaceUpdatePayload                   ReplicatedPayload;                                 // 0x0280(0x0040)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_1AFA[0x20];                                    // 0x02C0(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static void SetFaceComponentDebugMode(EFaceComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARFaceUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARFaceUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARFaceUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARFaceComponent">();
	}
	static class UARFaceComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARFaceComponent>();
	}
};

// Class AugmentedReality.ARImageComponent
// 0x0060 (0x02E0 - 0x0280)
class UARImageComponent final : public UARComponent
{
public:
	uint8                                         Pad_1AFB[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARImageUpdatePayload                  ReplicatedPayload;                                 // 0x0280(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	static void SetImageComponentDebugMode(EImageComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARImageUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARImageUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARImageUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARImageComponent">();
	}
	static class UARImageComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARImageComponent>();
	}
};

// Class AugmentedReality.ARQRCodeComponent
// 0x0070 (0x02F0 - 0x0280)
class UARQRCodeComponent final : public UARComponent
{
public:
	uint8                                         Pad_1AFC[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARQRCodeUpdatePayload                 ReplicatedPayload;                                 // 0x0280(0x0070)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static void SetQRCodeComponentDebugMode(EQRCodeComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARQRCodeUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARQRCodeUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARQRCodeUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARQRCodeComponent">();
	}
	static class UARQRCodeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARQRCodeComponent>();
	}
};

// Class AugmentedReality.ARPoseComponent
// 0x0040 (0x02C0 - 0x0280)
class UARPoseComponent final : public UARComponent
{
public:
	uint8                                         Pad_1AFD[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARPoseUpdatePayload                   ReplicatedPayload;                                 // 0x0280(0x0040)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static void SetPoseComponentDebugMode(EPoseComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARPoseUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARPoseUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARPoseUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPoseComponent">();
	}
	static class UARPoseComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPoseComponent>();
	}
};

// Class AugmentedReality.AREnvironmentProbeComponent
// 0x0030 (0x02B0 - 0x0280)
class UAREnvironmentProbeComponent final : public UARComponent
{
public:
	uint8                                         Pad_1AFE[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAREnvironmentProbeUpdatePayload       ReplicatedPayload;                                 // 0x0280(0x0030)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ReceiveAdd(const struct FAREnvironmentProbeUpdatePayload& Payload);
	void ReceiveUpdate(const struct FAREnvironmentProbeUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FAREnvironmentProbeUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AREnvironmentProbeComponent">();
	}
	static class UAREnvironmentProbeComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentProbeComponent>();
	}
};

// Class AugmentedReality.ARObjectComponent
// 0x0030 (0x02B0 - 0x0280)
class UARObjectComponent final : public UARComponent
{
public:
	uint8                                         Pad_1AFF[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARObjectUpdatePayload                 ReplicatedPayload;                                 // 0x0280(0x0030)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ReceiveAdd(const struct FARObjectUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARObjectUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARObjectUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARObjectComponent">();
	}
	static class UARObjectComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARObjectComponent>();
	}
};

// Class AugmentedReality.ARMeshComponent
// 0x0060 (0x02E0 - 0x0280)
class UARMeshComponent final : public UARComponent
{
public:
	uint8                                         Pad_1B00[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARMeshUpdatePayload                   ReplicatedPayload;                                 // 0x0280(0x0060)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, NoDestructor, Protected, NativeAccessSpecifierProtected)

public:
	void ReceiveAdd(const struct FARMeshUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARMeshUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARMeshUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARMeshComponent">();
	}
	static class UARMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARMeshComponent>();
	}
};

// Class AugmentedReality.ARGeoAnchorComponent
// 0x0070 (0x02F0 - 0x0280)
class UARGeoAnchorComponent final : public UARComponent
{
public:
	uint8                                         Pad_1B01[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FARGeoAnchorUpdatePayload              ReplicatedPayload;                                 // 0x0280(0x0070)(BlueprintVisible, BlueprintReadOnly, Net, RepNotify, Protected, NativeAccessSpecifierProtected)

public:
	static void SetGeoAnchorComponentDebugMode(EGeoAnchorComponentDebugMode NewDebugMode);

	void ReceiveAdd(const struct FARGeoAnchorUpdatePayload& Payload);
	void ReceiveUpdate(const struct FARGeoAnchorUpdatePayload& Payload);
	void ServerUpdatePayload(const struct FARGeoAnchorUpdatePayload& NewPayload);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARGeoAnchorComponent">();
	}
	static class UARGeoAnchorComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGeoAnchorComponent>();
	}
};

// Class AugmentedReality.ARDependencyHandler
// 0x0000 (0x0028 - 0x0028)
class UARDependencyHandler final : public UObject
{
public:
	static class UARDependencyHandler* GetARDependencyHandler();

	void CheckARServiceAvailability(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EARServiceAvailability* OutAvailability);
	void InstallARService(class UObject* WorldContextObject, const struct FLatentActionInfo& LatentInfo, EARServiceInstallRequestResult* OutInstallResult);
	void RequestARSessionPermission(class UObject* WorldContextObject, class UARSessionConfig* SessionConfig, const struct FLatentActionInfo& LatentInfo, EARServicePermissionRequestResult* OutPermissionResult);
	void StartARSessionLatent(class UObject* WorldContextObject, class UARSessionConfig* SessionConfig, const struct FLatentActionInfo& LatentInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARDependencyHandler">();
	}
	static class UARDependencyHandler* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARDependencyHandler>();
	}
};

// Class AugmentedReality.ARGeoTrackingSupport
// 0x0000 (0x0028 - 0x0028)
class UARGeoTrackingSupport final : public UObject
{
public:
	static class UARGeoTrackingSupport* GetGeoTrackingSupport();

	bool AddGeoAnchorAtLocation(float Longitude, float Latitude, const class FString& OptionalAnchorName);
	bool AddGeoAnchorAtLocationWithAltitude(float Longitude, float Latitude, float AltitudeMeters, const class FString& OptionalAnchorName);

	EARGeoTrackingAccuracy GetGeoTrackingAccuracy() const;
	EARGeoTrackingState GetGeoTrackingState() const;
	EARGeoTrackingStateReason GetGeoTrackingStateReason() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARGeoTrackingSupport">();
	}
	static class UARGeoTrackingSupport* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGeoTrackingSupport>();
	}
};

// Class AugmentedReality.CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy
// 0x0050 (0x00A0 - 0x0050)
class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B08[0x30];                                    // 0x0070(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* CheckGeoTrackingAvailability(class UObject* WorldContextObject);
	static class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* CheckGeoTrackingAvailabilityAtLocation(class UObject* WorldContextObject, float Longitude, float Latitude);

	void GeoTrackingAvailabilityDelegate__DelegateSignature(bool bIsAvailable, const class FString& Error);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy">();
	}
	static class UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCheckGeoTrackingAvailabilityAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.GetGeoLocationAsyncTaskBlueprintProxy
// 0x0050 (0x00A0 - 0x0050)
class UGetGeoLocationAsyncTaskBlueprintProxy final : public UARBaseAsyncTaskBlueprintProxy
{
public:
	FMulticastInlineDelegateProperty_             OnSuccess;                                         // 0x0050(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnFailed;                                          // 0x0060(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0A[0x30];                                    // 0x0070(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UGetGeoLocationAsyncTaskBlueprintProxy* GetGeoLocationAtWorldPosition(class UObject* WorldContextObject, const struct FVector& WorldPosition);

	void GetGeoLocationDelegate__DelegateSignature(float Longitude, float Latitude, float Altitude, const class FString& Error);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GetGeoLocationAsyncTaskBlueprintProxy">();
	}
	static class UGetGeoLocationAsyncTaskBlueprintProxy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGetGeoLocationAsyncTaskBlueprintProxy>();
	}
};

// Class AugmentedReality.ARLifeCycleComponent
// 0x0030 (0x0230 - 0x0200)
class UARLifeCycleComponent final : public USceneComponent
{
public:
	FMulticastInlineDelegateProperty_             OnARActorSpawnedDelegate;                          // 0x01F8(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnARActorToBeDestroyedDelegate;                    // 0x0208(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B0D[0x18];                                    // 0x0218(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void InstanceARActorSpawnedDelegate__DelegateSignature(class UClass* ComponentClass, const struct FGuid& NativeID, class AARActor* SpawnedActor);
	void InstanceARActorToBeDestroyedDelegate__DelegateSignature(class AARActor* Actor);
	void ServerDestroyARActor(class AARActor* Actor);
	void ServerSpawnARActor(class UClass* ComponentClass, const struct FGuid& NativeID);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARLifeCycleComponent">();
	}
	static class UARLifeCycleComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARLifeCycleComponent>();
	}
};

// Class AugmentedReality.ARLightEstimate
// 0x0000 (0x0028 - 0x0028)
class UARLightEstimate : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARLightEstimate">();
	}
	static class UARLightEstimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARLightEstimate>();
	}
};

// Class AugmentedReality.ARBasicLightEstimate
// 0x0018 (0x0040 - 0x0028)
class UARBasicLightEstimate final : public UARLightEstimate
{
public:
	float                                         AmbientIntensityLumens;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         AmbientColorTemperatureKelvin;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                           AmbientColor;                                      // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	struct FLinearColor GetAmbientColor() const;
	float GetAmbientColorTemperatureKelvin() const;
	float GetAmbientIntensityLumens() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARBasicLightEstimate">();
	}
	static class UARBasicLightEstimate* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARBasicLightEstimate>();
	}
};

// Class AugmentedReality.AROriginActor
// 0x0000 (0x0220 - 0x0220)
class AAROriginActor final : public AActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AROriginActor">();
	}
	static class AAROriginActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAROriginActor>();
	}
};

// Class AugmentedReality.ARPin
// 0x00C8 (0x00F0 - 0x0028)
class UARPin final : public UObject
{
public:
	class UARTrackedGeometry*                     TrackedGeometry;                                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                        PinnedComponent;                                   // 0x0030(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B0E[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalToTrackingTransform;                          // 0x0040(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                             LocalToAlignedTrackingTransform;                   // 0x0070(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	EARTrackingState                              TrackingState;                                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B0F[0x1F];                                    // 0x00A1(0x001F)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnARTrackingStateChanged;                          // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	FMulticastInlineDelegateProperty_             OnARTransformUpdated;                              // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B10[0x10];                                    // 0x00E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void DebugDraw(class UWorld* World, const struct FLinearColor& Color, float Scale, float PersistForSeconds) const;
	class FName GetDebugName() const;
	struct FTransform GetLocalToTrackingTransform() const;
	struct FTransform GetLocalToWorldTransform() const;
	class USceneComponent* GetPinnedComponent() const;
	class UARTrackedGeometry* GetTrackedGeometry() const;
	EARTrackingState GetTrackingState() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPin">();
	}
	static class UARPin* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPin>();
	}
};

// Class AugmentedReality.ARSessionConfig
// 0x00E0 (0x0110 - 0x0030)
class UARSessionConfig final : public UDataAsset
{
public:
	bool                                          bGenerateMeshDataFromTrackedGeometry;              // 0x0030(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGenerateCollisionForMeshData;                     // 0x0031(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bGenerateNavMeshForMeshData;                       // 0x0032(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseMeshDataForOcclusion;                          // 0x0033(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRenderMeshDataInWireframe;                        // 0x0034(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTrackSceneObjects;                                // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUsePersonSegmentationForOcclusion;                // 0x0036(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseSceneDepthForOcclusion;                        // 0x0037(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseAutomaticImageScaleEstimation;                 // 0x0038(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseStandardOnboardingUX;                          // 0x0039(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EARWorldAlignment                             WorldAlignment;                                    // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARSessionType                                SessionType;                                       // 0x003B(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARPlaneDetectionMode                         PlaneDetectionMode;                                // 0x003C(0x0001)(ZeroConstructor, Deprecated, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bHorizontalPlaneDetection;                         // 0x003D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bVerticalPlaneDetection;                           // 0x003E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutoFocus;                                  // 0x003F(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARLightEstimationMode                        LightEstimationMode;                               // 0x0040(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARFrameSyncMode                              FrameSyncMode;                                     // 0x0041(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutomaticCameraOverlay;                     // 0x0042(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bEnableAutomaticCameraTracking;                    // 0x0043(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetCameraTracking;                              // 0x0044(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                          bResetTrackedObjects;                              // 0x0045(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B11[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UARCandidateImage*>              CandidateImages;                                   // 0x0048(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	int32                                         MaxNumSimultaneousImagesTracked;                   // 0x0058(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EAREnvironmentCaptureProbeType                EnvironmentCaptureProbeType;                       // 0x005C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B12[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 WorldMapData;                                      // 0x0060(0x0010)(Edit, ZeroConstructor, EditConst, Protected, NativeAccessSpecifierProtected)
	TArray<class UARCandidateObject*>             CandidateObjects;                                  // 0x0070(0x0010)(Edit, ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	struct FARVideoFormat                         DesiredVideoFormat;                                // 0x0080(0x000C)(Edit, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                          bUseOptimalVideoFormat;                            // 0x008C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARFaceTrackingDirection                      FaceTrackingDirection;                             // 0x008D(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARFaceTrackingUpdate                         FaceTrackingUpdate;                                // 0x008E(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B13[0x1];                                     // 0x008F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxNumberOfTrackedFaces;                           // 0x0090(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B14[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 SerializedARCandidateImageDatabase;                // 0x0098(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	EARSessionTrackingFeature                     EnabledSessionTrackingFeature;                     // 0x00A8(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARSceneReconstruction                        SceneReconstructionMethod;                         // 0x00A9(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B15[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UARPlaneComponent>          PlaneComponentClass;                               // 0x00B0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARPointComponent>          PointComponentClass;                               // 0x00B8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARFaceComponent>           FaceComponentClass;                                // 0x00C0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARImageComponent>          ImageComponentClass;                               // 0x00C8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARQRCodeComponent>         QRCodeComponentClass;                              // 0x00D0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARPoseComponent>           PoseComponentClass;                                // 0x00D8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UAREnvironmentProbeComponent> EnvironmentProbeComponentClass;                    // 0x00E0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARObjectComponent>         ObjectComponentClass;                              // 0x00E8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARMeshComponent>           MeshComponentClass;                                // 0x00F0(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TSubclassOf<class UARGeoAnchorComponent>      GeoAnchorComponentClass;                           // 0x00F8(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultMeshMaterial;                               // 0x0100(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMaterialInterface*                     DefaultWireframeMeshMaterial;                      // 0x0108(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	void AddCandidateImage(class UARCandidateImage* NewCandidateImage);
	void AddCandidateObject(class UARCandidateObject* CandidateObject);
	void SetCandidateObjectList(const TArray<class UARCandidateObject*>& InCandidateObjects);
	void SetDesiredVideoFormat(const struct FARVideoFormat& NewFormat);
	void SetEnableAutoFocus(bool bNewValue);
	void SetFaceTrackingDirection(EARFaceTrackingDirection InDirection);
	void SetFaceTrackingUpdate(EARFaceTrackingUpdate InUpdate);
	void SetResetCameraTracking(bool bNewValue);
	void SetResetTrackedObjects(bool bNewValue);
	void SetSceneReconstructionMethod(EARSceneReconstruction InSceneReconstructionMethod);
	void SetSessionTrackingFeatureToEnable(EARSessionTrackingFeature InSessionTrackingFeature);
	void SetWorldMapData(const TArray<uint8>& Param_WorldMapData);

	const TArray<class UARCandidateImage*> GetCandidateImageList() const;
	const TArray<class UARCandidateObject*> GetCandidateObjectList() const;
	struct FARVideoFormat GetDesiredVideoFormat() const;
	EARSessionTrackingFeature GetEnabledSessionTrackingFeature() const;
	EAREnvironmentCaptureProbeType GetEnvironmentCaptureProbeType() const;
	EARFaceTrackingDirection GetFaceTrackingDirection() const;
	EARFaceTrackingUpdate GetFaceTrackingUpdate() const;
	EARFrameSyncMode GetFrameSyncMode() const;
	EARLightEstimationMode GetLightEstimationMode() const;
	int32 GetMaxNumSimultaneousImagesTracked() const;
	EARPlaneDetectionMode GetPlaneDetectionMode() const;
	EARSceneReconstruction GetSceneReconstructionMethod() const;
	EARSessionType GetSessionType() const;
	EARWorldAlignment GetWorldAlignment() const;
	const TArray<uint8> GetWorldMapData() const;
	bool ShouldEnableAutoFocus() const;
	bool ShouldEnableCameraTracking() const;
	bool ShouldRenderCameraOverlay() const;
	bool ShouldResetCameraTracking() const;
	bool ShouldResetTrackedObjects() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSessionConfig">();
	}
	static class UARSessionConfig* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARSessionConfig>();
	}
};

// Class AugmentedReality.ARSharedWorldGameMode
// 0x0068 (0x0370 - 0x0308)
class AARSharedWorldGameMode final : public AGameMode
{
public:
	int32                                         BufferSizePerChunk;                                // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B16[0x64];                                    // 0x030C(0x0064)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class AARSharedWorldGameState* GetARSharedWorldGameState();
	void SetARSharedWorldData(const TArray<uint8>& ARWorldData);
	void SetARWorldSharingIsReady();
	void SetPreviewImageData(const TArray<uint8>& ImageData);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSharedWorldGameMode">();
	}
	static class AARSharedWorldGameMode* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldGameMode>();
	}
};

// Class AugmentedReality.ARSharedWorldGameState
// 0x0038 (0x02C8 - 0x0290)
class AARSharedWorldGameState final : public AGameState
{
public:
	TArray<uint8>                                 PreviewImageData;                                  // 0x0290(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ARWorldData;                                       // 0x02A0(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         PreviewImageBytesTotal;                            // 0x02B0(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ARWorldBytesTotal;                                 // 0x02B4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PreviewImageBytesDelivered;                        // 0x02B8(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ARWorldBytesDelivered;                             // 0x02BC(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B17[0x8];                                     // 0x02C0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void K2_OnARWorldMapIsReady();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSharedWorldGameState">();
	}
	static class AARSharedWorldGameState* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldGameState>();
	}
};

// Class AugmentedReality.ARSharedWorldPlayerController
// 0x0008 (0x0578 - 0x0570)
class AARSharedWorldPlayerController final : public APlayerController
{
public:
	uint8                                         Pad_1B18[0x8];                                     // 0x0570(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClientInitSharedWorld(int32 PreviewImageSize, int32 ARWorldDataSize);
	void ClientUpdateARWorldData(int32 Offset, const TArray<uint8>& Buffer);
	void ClientUpdatePreviewImageData(int32 Offset, const TArray<uint8>& Buffer);
	void ServerMarkReadyForReceiving();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSharedWorldPlayerController">();
	}
	static class AARSharedWorldPlayerController* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSharedWorldPlayerController>();
	}
};

// Class AugmentedReality.ARSkyLight
// 0x0010 (0x0240 - 0x0230)
class AARSkyLight final : public ASkyLight
{
public:
	class UAREnvironmentCaptureProbe*             CaptureProbe;                                      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B1B[0x8];                                     // 0x0238(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetEnvironmentCaptureProbe(class UAREnvironmentCaptureProbe* InCaptureProbe);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARSkyLight">();
	}
	static class AARSkyLight* GetDefaultObj()
	{
		return GetDefaultObjImpl<AARSkyLight>();
	}
};

// Class AugmentedReality.ARTexture
// 0x0020 (0x01A0 - 0x0180)
#pragma pack(push, 0x1)
class alignas(0x10) UARTexture : public UTexture
{
public:
	EARTextureType                                TextureType;                                       // 0x0178(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1C[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp;                                         // 0x017C(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ExternalTextureGuid;                               // 0x0180(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x0190(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTexture">();
	}
	static class UARTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTexture>();
	}
};
#pragma pack(pop)

// Class AugmentedReality.ARTextureCameraImage
// 0x0000 (0x01A0 - 0x01A0)
class UARTextureCameraImage final : public UARTexture
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTextureCameraImage">();
	}
	static class UARTextureCameraImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTextureCameraImage>();
	}
};

// Class AugmentedReality.ARTextureCameraDepth
// 0x0000 (0x01A0 - 0x01A0)
class UARTextureCameraDepth final : public UARTexture
{
public:
	EARDepthQuality                               DepthQuality;                                      // 0x0198(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EARDepthAccuracy                              DepthAccuracy;                                     // 0x0199(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTemporallySmoothed;                             // 0x019A(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1D[0x5];                                     // 0x019B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTextureCameraDepth">();
	}
	static class UARTextureCameraDepth* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTextureCameraDepth>();
	}
};

// Class AugmentedReality.AREnvironmentCaptureProbeTexture
// 0x0020 (0x01F0 - 0x01D0)
class UAREnvironmentCaptureProbeTexture final : public UTextureCube
{
public:
	EARTextureType                                TextureType;                                       // 0x01D0(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1E[0x3];                                     // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Timestamp;                                         // 0x01D4(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGuid                                  ExternalTextureGuid;                               // 0x01D8(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              Size;                                              // 0x01E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AREnvironmentCaptureProbeTexture">();
	}
	static class UAREnvironmentCaptureProbeTexture* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentCaptureProbeTexture>();
	}
};

// Class AugmentedReality.ARTraceResultDummy
// 0x0000 (0x0028 - 0x0028)
class UARTraceResultDummy final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTraceResultDummy">();
	}
	static class UARTraceResultDummy* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTraceResultDummy>();
	}
};

// Class AugmentedReality.ARTrackedGeometry
// 0x00D8 (0x0100 - 0x0028)
#pragma pack(push, 0x1)
class alignas(0x10) UARTrackedGeometry : public UObject
{
public:
	struct FGuid                                  UniqueId;                                          // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B1F[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LocalToTrackingTransform;                          // 0x0040(0x0030)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                             LocalToAlignedTrackingTransform;                   // 0x0070(0x0030)(IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	EARTrackingState                              TrackingState;                                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B20[0xF];                                     // 0x00A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class UMRMeshComponent*                       UnderlyingMesh;                                    // 0x00B0(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARObjectClassification                       ObjectClassification;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARSpatialMeshUsageFlags                      SpatialMeshUsageFlags;                             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B21[0x16];                                    // 0x00BA(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LastUpdateFrameNumber;                             // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B22[0xC];                                     // 0x00D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DebugName;                                         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B23[0x10];                                    // 0x00E8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UMRMeshComponent* GetUnderlyingMesh();

	class FName GetDebugName() const;
	int32 GetLastUpdateFrameNumber() const;
	float GetLastUpdateTimestamp() const;
	struct FTransform GetLocalToTrackingTransform() const;
	struct FTransform GetLocalToWorldTransform() const;
	class FString GetName() const;
	EARObjectClassification GetObjectClassification() const;
	EARTrackingState GetTrackingState() const;
	bool HasSpatialMeshUsageFlag(const EARSpatialMeshUsageFlags InFlag) const;
	bool IsTracked() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedGeometry">();
	}
	static class UARTrackedGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedGeometry>();
	}
};
#pragma pack(pop)

// Class AugmentedReality.ARPlaneGeometry
// 0x0030 (0x0130 - 0x0100)
class UARPlaneGeometry final : public UARTrackedGeometry
{
public:
	EARPlaneOrientation                           Orientation;                                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B24[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Center;                                            // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                Extent;                                            // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B25[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        BoundaryPolygon;                                   // 0x0118(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)
	class UARPlaneGeometry*                       SubsumedBy;                                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	TArray<struct FVector> GetBoundaryPolygonInLocalSpace() const;
	struct FVector GetCenter() const;
	struct FVector GetExtent() const;
	EARPlaneOrientation GetOrientation() const;
	class UARPlaneGeometry* GetSubsumedBy() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARPlaneGeometry">();
	}
	static class UARPlaneGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARPlaneGeometry>();
	}
};

// Class AugmentedReality.ARTrackedPoint
// 0x0000 (0x0100 - 0x0100)
class UARTrackedPoint final : public UARTrackedGeometry
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedPoint">();
	}
	static class UARTrackedPoint* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedPoint>();
	}
};

// Class AugmentedReality.ARTrackedImage
// 0x0010 (0x0110 - 0x0100)
#pragma pack(push, 0x1)
class alignas(0x10) UARTrackedImage : public UARTrackedGeometry
{
public:
	class UARCandidateImage*                      DetectedImage;                                     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                              EstimatedSize;                                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	struct FVector2D GetEstimateSize();

	class UARCandidateImage* GetDetectedImage() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedImage">();
	}
	static class UARTrackedImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedImage>();
	}
};
#pragma pack(pop)

// Class AugmentedReality.ARTrackedQRCode
// 0x0010 (0x0120 - 0x0110)
class UARTrackedQRCode final : public UARTrackedImage
{
public:
	class FString                                 QRCode;                                            // 0x0108(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Version;                                           // 0x0118(0x0004)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B26[0x4];                                     // 0x011C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedQRCode">();
	}
	static class UARTrackedQRCode* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedQRCode>();
	}
};

// Class AugmentedReality.ARFaceGeometry
// 0x00F0 (0x01F0 - 0x0100)
class UARFaceGeometry final : public UARTrackedGeometry
{
public:
	struct FVector                                LookAtTarget;                                      // 0x00F8(0x000C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsTracked;                                        // 0x0104(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1B27[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EARFaceBlendShape, float>                BlendShapes;                                       // 0x0108(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B28[0x38];                                    // 0x0158(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftEyeTransform;                                  // 0x0190(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FTransform                             RightEyeTransform;                                 // 0x01C0(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)

public:
	const TMap<EARFaceBlendShape, float> GetBlendShapes() const;
	float GetBlendShapeValue(EARFaceBlendShape BlendShape) const;
	const struct FTransform GetLocalSpaceEyeTransform(EAREye Eye) const;
	struct FTransform GetWorldSpaceEyeTransform(EAREye Eye) const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARFaceGeometry">();
	}
	static class UARFaceGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARFaceGeometry>();
	}
};

// Class AugmentedReality.AREnvironmentCaptureProbe
// 0x0010 (0x0110 - 0x0100)
class UAREnvironmentCaptureProbe final : public UARTrackedGeometry
{
public:
	struct FVector                                Extent;                                            // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B2C[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAREnvironmentCaptureProbeTexture*      EnvironmentCaptureTexture;                         // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	class UAREnvironmentCaptureProbeTexture* GetEnvironmentCaptureTexture();

	struct FVector GetExtent() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AREnvironmentCaptureProbe">();
	}
	static class UAREnvironmentCaptureProbe* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAREnvironmentCaptureProbe>();
	}
};

// Class AugmentedReality.ARTrackedObject
// 0x0000 (0x0100 - 0x0100)
class UARTrackedObject final : public UARTrackedGeometry
{
public:
	class UARCandidateObject*                     DetectedObject;                                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	class UARCandidateObject* GetDetectedObject() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedObject">();
	}
	static class UARTrackedObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedObject>();
	}
};

// Class AugmentedReality.ARTrackedPose
// 0x0050 (0x0150 - 0x0100)
class UARTrackedPose final : public UARTrackedGeometry
{
public:
	struct FARPose3D                              TrackedPose;                                       // 0x00F8(0x0050)(NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B2D[0x8];                                     // 0x0148(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	const struct FARPose3D GetTrackedPoseData() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackedPose">();
	}
	static class UARTrackedPose* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackedPose>();
	}
};

// Class AugmentedReality.ARMeshGeometry
// 0x0000 (0x0100 - 0x0100)
class UARMeshGeometry final : public UARTrackedGeometry
{
public:
	bool GetObjectClassificationAtLocation(const struct FVector& InWorldLocation, EARObjectClassification* OutClassification, struct FVector* OutClassificationLocation, float MaxLocationDiff);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARMeshGeometry">();
	}
	static class UARMeshGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARMeshGeometry>();
	}
};

// Class AugmentedReality.ARGeoAnchor
// 0x0010 (0x0110 - 0x0100)
class UARGeoAnchor final : public UARTrackedGeometry
{
public:
	uint8                                         Pad_1B30[0x18];                                    // 0x00F8(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	float GetAltitudeMeters() const;
	EARAltitudeSource GetAltitudeSource() const;
	float GetLatitude() const;
	float GetLongitude() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARGeoAnchor">();
	}
	static class UARGeoAnchor* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARGeoAnchor>();
	}
};

// Class AugmentedReality.ARTrackableNotifyComponent
// 0x0150 (0x0200 - 0x00B0)
class UARTrackableNotifyComponent final : public UActorComponent
{
public:
	FMulticastInlineDelegateProperty_             OnAddTrackedGeometry;                              // 0x00B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedGeometry;                           // 0x00C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedGeometry;                           // 0x00D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedPlane;                                 // 0x00E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedPlane;                              // 0x00F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedPlane;                              // 0x0100(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedPoint;                                 // 0x0110(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedPoint;                              // 0x0120(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedPoint;                              // 0x0130(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedImage;                                 // 0x0140(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedImage;                              // 0x0150(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedImage;                              // 0x0160(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedFace;                                  // 0x0170(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedFace;                               // 0x0180(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedFace;                               // 0x0190(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedEnvProbe;                              // 0x01A0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedEnvProbe;                           // 0x01B0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedEnvProbe;                           // 0x01C0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnAddTrackedObject;                                // 0x01D0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnUpdateTrackedObject;                             // 0x01E0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	FMulticastInlineDelegateProperty_             OnRemoveTrackedObject;                             // 0x01F0(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTrackableNotifyComponent">();
	}
	static class UARTrackableNotifyComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTrackableNotifyComponent>();
	}
};

// Class AugmentedReality.ARTypesDummyClass
// 0x0000 (0x0028 - 0x0028)
class UARTypesDummyClass final : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARTypesDummyClass">();
	}
	static class UARTypesDummyClass* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARTypesDummyClass>();
	}
};

// Class AugmentedReality.ARCandidateImage
// 0x0028 (0x0058 - 0x0030)
class UARCandidateImage final : public UDataAsset
{
public:
	class UTexture2D*                             CandidateTexture;                                  // 0x0030(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 FriendlyName;                                      // 0x0038(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Width;                                             // 0x0048(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                         Height;                                            // 0x004C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	EARCandidateImageOrientation                  Orientation;                                       // 0x0050(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1B31[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	class UTexture2D* GetCandidateTexture() const;
	class FString GetFriendlyName() const;
	EARCandidateImageOrientation GetOrientation() const;
	float GetPhysicalHeight() const;
	float GetPhysicalWidth() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARCandidateImage">();
	}
	static class UARCandidateImage* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCandidateImage>();
	}
};

// Class AugmentedReality.ARCandidateObject
// 0x0040 (0x0070 - 0x0030)
class UARCandidateObject final : public UDataAsset
{
public:
	TArray<uint8>                                 CandidateObjectData;                               // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	class FString                                 FriendlyName;                                      // 0x0040(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBox                                   BoundingBox;                                       // 0x0050(0x001C)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B32[0x4];                                     // 0x006C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void SetBoundingBox(const struct FBox& InBoundingBox);
	void SetCandidateObjectData(const TArray<uint8>& InCandidateObject);
	void SetFriendlyName(const class FString& NewName);

	const struct FBox GetBoundingBox() const;
	const TArray<uint8> GetCandidateObjectData() const;
	class FString GetFriendlyName() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ARCandidateObject">();
	}
	static class UARCandidateObject* GetDefaultObj()
	{
		return GetDefaultObjImpl<UARCandidateObject>();
	}
};

}

