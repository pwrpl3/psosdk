#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MM_Character

#include "Basic.hpp"

#include "MM_Character_classes.hpp"
#include "MM_Character_parameters.hpp"


namespace SDK
{

// Function MM_Character.MM_Character_C.ExecuteUbergraph_MM_Character
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::ExecuteUbergraph_MM_Character(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "ExecuteUbergraph_MM_Character");

	Params::MM_Character_C_ExecuteUbergraph_MM_Character Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.CheckRotationState
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::CheckRotationState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "CheckRotationState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.StartPlayerRotationTimer
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::StartPlayerRotationTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "StartPlayerRotationTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.EnterCustomizationView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::EnterCustomizationView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "EnterCustomizationView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.EnterDefaultView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::EnterDefaultView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "EnterDefaultView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.EnterPanelView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::EnterPanelView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "EnterPanelView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.EnterMainMenuView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::EnterMainMenuView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "EnterMainMenuView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.Camera_ShoeView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::Camera_ShoeView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "Camera_ShoeView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.Camera_BallView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::Camera_BallView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "Camera_BallView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AMM_Character_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.Camera_FaceView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::Camera_FaceView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "Camera_FaceView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.Camera_CustomizationView
// (BlueprintCallable, BlueprintEvent)

void AMM_Character_C::Camera_CustomizationView()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "Camera_CustomizationView");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.UpdateBallStyle
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_BallDesign                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateBallStyle(int32 Param_BallDesign)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateBallStyle");

	Params::MM_Character_C_UpdateBallStyle Parms{};

	Parms.Param_BallDesign = Param_BallDesign;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.ApplySP_Appearance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AMM_Character_C::ApplySP_Appearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "ApplySP_Appearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MM_Character.MM_Character_C.UpdateHairAppearance
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HairStyle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     HairColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateHairAppearance(int32 HairStyle, const struct FLinearColor& HairColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateHairAppearance");

	Params::MM_Character_C_UpdateHairAppearance Parms{};

	Parms.HairStyle = HairStyle;
	Parms.HairColor = std::move(HairColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateShoesAppearance
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShoeStyle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateShoesAppearance(int32 ShoeStyle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateShoesAppearance");

	Params::MM_Character_C_UpdateShoesAppearance Parms{};

	Parms.ShoeStyle = ShoeStyle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateSocksAppearance
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   SocksStyle                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BodySize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ShoeStyle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SocksPattern                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateSocksAppearance(const int32& SocksStyle, int32 BodySize, int32 ShoeStyle, const int32& SocksPattern, const struct FLinearColor& Color1, const struct FLinearColor& Color2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateSocksAppearance");

	Params::MM_Character_C_UpdateSocksAppearance Parms{};

	Parms.SocksStyle = SocksStyle;
	Parms.BodySize = BodySize;
	Parms.ShoeStyle = ShoeStyle;
	Parms.SocksPattern = SocksPattern;
	Parms.Color1 = std::move(Color1);
	Parms.Color2 = std::move(Color2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateShortsAppearance
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShortsStyle                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BodySize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SkinTone                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ShortsPattern                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color1                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color2                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateShortsAppearance(const int32& ShortsStyle, int32 BodySize, float SkinTone, const int32& ShortsPattern, const struct FLinearColor& Color1, const struct FLinearColor& Color2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateShortsAppearance");

	Params::MM_Character_C_UpdateShortsAppearance Parms{};

	Parms.ShortsStyle = ShortsStyle;
	Parms.BodySize = BodySize;
	Parms.SkinTone = SkinTone;
	Parms.ShortsPattern = ShortsPattern;
	Parms.Color1 = std::move(Color1);
	Parms.Color2 = std::move(Color2);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateFacialHairAppearance
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   FacialHairStyle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     FacialHairColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateFacialHairAppearance(int32 FacialHairStyle, const struct FLinearColor& FacialHairColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateFacialHairAppearance");

	Params::MM_Character_C_UpdateFacialHairAppearance Parms{};

	Parms.FacialHairStyle = FacialHairStyle;
	Parms.FacialHairColor = std::move(FacialHairColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateHeadAppearance
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   HeadType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   BodySize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SkinTone                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   EyeColor                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   HairStyle                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     HairColor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   FacialHairStyle                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     FacialHairColor                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateHeadAppearance(int32 HeadType, int32 BodySize, float SkinTone, const int32& EyeColor, int32 HairStyle, const struct FLinearColor& HairColor, int32 FacialHairStyle, const struct FLinearColor& FacialHairColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateHeadAppearance");

	Params::MM_Character_C_UpdateHeadAppearance Parms{};

	Parms.HeadType = HeadType;
	Parms.BodySize = BodySize;
	Parms.SkinTone = SkinTone;
	Parms.EyeColor = EyeColor;
	Parms.HairStyle = HairStyle;
	Parms.HairColor = std::move(HairColor);
	Parms.FacialHairStyle = FacialHairStyle;
	Parms.FacialHairColor = std::move(FacialHairColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.RecieveSP_PlayerAppearance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSP_PlayerAppearance             Param_SP_PlayerAppearance                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMM_Character_C::RecieveSP_PlayerAppearance(const struct FSP_PlayerAppearance& Param_SP_PlayerAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "RecieveSP_PlayerAppearance");

	Params::MM_Character_C_RecieveSP_PlayerAppearance Parms{};

	Parms.Param_SP_PlayerAppearance = std::move(Param_SP_PlayerAppearance);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateGlovesAppearance
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Gloves                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateGlovesAppearance(int32 Param_Gloves, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateGlovesAppearance");

	Params::MM_Character_C_UpdateGlovesAppearance Parms{};

	Parms.Param_Gloves = Param_Gloves;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.RecieveSP_TeamAppearance
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSP_TeamAppearance               Param_SP_TeamAppearance                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMM_Character_C::RecieveSP_TeamAppearance(const struct FSP_TeamAppearance& Param_SP_TeamAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "RecieveSP_TeamAppearance");

	Params::MM_Character_C_RecieveSP_TeamAppearance Parms{};

	Parms.Param_SP_TeamAppearance = std::move(Param_SP_TeamAppearance);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.RecieveSP_AppearanceCombined
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSP_PlayerAppearance             Param_SP_PlayerAppearance                              (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FSP_TeamAppearance               Param_SP_TeamAppearance                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void AMM_Character_C::RecieveSP_AppearanceCombined(const struct FSP_PlayerAppearance& Param_SP_PlayerAppearance, const struct FSP_TeamAppearance& Param_SP_TeamAppearance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "RecieveSP_AppearanceCombined");

	Params::MM_Character_C_RecieveSP_AppearanceCombined Parms{};

	Parms.Param_SP_PlayerAppearance = std::move(Param_SP_PlayerAppearance);
	Parms.Param_SP_TeamAppearance = std::move(Param_SP_TeamAppearance);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateShirtAppearance
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ShirtStyle                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ShirtTuckedIn_                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   BodySize                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SkinTone                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ShirtPattern                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ShirtColor1                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ShirtColor2                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             PlayerNumber                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   ShirtFontStyle                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSlateColor                      ShirtFontColor                                         (BlueprintVisible, BlueprintReadOnly, Parm)
// int32                                   ShiftFontFrontNumber                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateShirtAppearance(int32 ShirtStyle, bool ShirtTuckedIn_, int32 BodySize, float SkinTone, const int32& ShirtPattern, const struct FLinearColor& ShirtColor1, const struct FLinearColor& ShirtColor2, const class FText& PlayerName, const class FText& PlayerNumber, int32 ShirtFontStyle, const struct FSlateColor& ShirtFontColor, int32 ShiftFontFrontNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateShirtAppearance");

	Params::MM_Character_C_UpdateShirtAppearance Parms{};

	Parms.ShirtStyle = ShirtStyle;
	Parms.ShirtTuckedIn_ = ShirtTuckedIn_;
	Parms.BodySize = BodySize;
	Parms.SkinTone = SkinTone;
	Parms.ShirtPattern = ShirtPattern;
	Parms.ShirtColor1 = std::move(ShirtColor1);
	Parms.ShirtColor2 = std::move(ShirtColor2);
	Parms.PlayerName = std::move(PlayerName);
	Parms.PlayerNumber = std::move(PlayerNumber);
	Parms.ShirtFontStyle = ShirtFontStyle;
	Parms.ShirtFontColor = std::move(ShirtFontColor);
	Parms.ShiftFontFrontNumber = ShiftFontFrontNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UpdateWristbandsAppearance
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Wristbands                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AMM_Character_C::UpdateWristbandsAppearance(int32 Param_Wristbands, const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UpdateWristbandsAppearance");

	Params::MM_Character_C_UpdateWristbandsAppearance Parms{};

	Parms.Param_Wristbands = Param_Wristbands;
	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MM_Character.MM_Character_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AMM_Character_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MM_Character_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

