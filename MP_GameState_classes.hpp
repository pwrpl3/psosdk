#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MP_GameState

#include "Basic.hpp"

#include "StatsUpdateSheet_structs.hpp"
#include "TeamInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "TeamFormation_0_structs.hpp"
#include "SP_TeamAppearance_structs.hpp"
#include "AwsGameLiftServer_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass MP_GameState.MP_GameState_C
// 0x0918 (0x0B88 - 0x0270)
class AMP_GameState_C final : public AGameStateBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPSO_GameInstance_C*                    PSO_GameInstance;                                  // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ASP_Controller_C*>               SP_Controllers;                                    // 0x0288(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class AMP_PlayerState_C*>              MP_PlayerStates;                                   // 0x0298(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ASP_Character_C*>                Team1Characters;                                   // 0x02A8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class ASP_Character_C*>                Team2Characters;                                   // 0x02B8(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	class AMatchController_Regulation_C*          MatchController_Reg;                               // 0x02C8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMatchController_Indoor_C*              MatchController_Ind;                               // 0x02D0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASoccerBall_C*                          MatchBall;                                         // 0x02D8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 SessionID;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SessionName;                                       // 0x02F0(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 SessionMode;                                       // 0x0300(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 MatchRuleset;                                      // 0x0310(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         MatchLength;                                       // 0x0320(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinMatchLength;                                    // 0x0324(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxMatchLength;                                    // 0x0328(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamSize;                                          // 0x032C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTeamSize;                                       // 0x0330(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchState;                                        // 0x0334(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 MatchSequence;                                     // 0x0338(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         CurrentHalf;                                       // 0x0348(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalMatchSeconds;                                 // 0x034C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MatchMinutes;                                      // 0x0350(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MatchSeconds;                                      // 0x0354(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InOvertime;                                        // 0x0358(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SingleKeeper;                                      // 0x0359(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          OvertimeEnabled;                                   // 0x035A(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F0[0x1];                                     // 0x035B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RedCardTime;                                       // 0x035C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayersAfk;                                        // 0x0360(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CheckGkPossesionCoolDown;                          // 0x0361(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MatchEnded;                                        // 0x0362(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoStart;                                         // 0x0363(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UpdatingTeamCharacters;                            // 0x0364(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F1[0x3];                                     // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WinningTeam;                                       // 0x0368(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22F2[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         BannedSteamIDs;                                    // 0x0370(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<struct FStatsUpdateSheet>              StatsUpdateSheets;                                 // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTeamInfo                              T1Info;                                            // 0x0390(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSP_TeamAppearance                     T1Appearance;                                      // 0x03C0(0x00A0)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSP_TeamAppearance                     T1GkAppearance;                                    // 0x0460(0x00A0)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTeamFormation                         T1Formation;                                       // 0x0500(0x0050)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         T1Length;                                          // 0x0550(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1SubsSlots;                                       // 0x0554(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTeamInfo                              T2Info;                                            // 0x0558(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSP_TeamAppearance                     T2Appearance;                                      // 0x0588(0x00A0)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FSP_TeamAppearance                     T2GkAppearance;                                    // 0x0628(0x00A0)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	struct FTeamFormation                         T2Formation;                                       // 0x06C8(0x0050)(Edit, BlueprintVisible, Net, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         T2Length;                                          // 0x0718(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2SubsSlots;                                       // 0x071C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  T1RedCardsBool;                                    // 0x0720(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<int32>                                 T1RedCardsTime;                                    // 0x0730(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<class AMP_PlayerState_C*>              T1RedCardPlayers;                                  // 0x0740(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         T1PossessionTime;                                  // 0x0750(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Score;                                           // 0x0754(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  T2RedCardsBool;                                    // 0x0758(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	TArray<int32>                                 T2RedCardsTime;                                    // 0x0768(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	bool                                          OnestPersonOnly;                                   // 0x0778(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F3[0x3];                                     // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TeamMateLastDefenderX;                             // 0x077C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FTeamFormation>            Threev3_Formations;                                // 0x0780(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Fourv4_Formations;                                 // 0x07D0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Fivev5_Formations;                                 // 0x0820(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Sixv6_Formations;                                  // 0x0870(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Sevenv7_Formations;                                // 0x08C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            Eightv8_Formations;                                // 0x0910(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 MaxPlayers;                                        // 0x0960(0x0010)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class AMP_PlayerState_C*>              T2RedCardPlayers;                                  // 0x0970(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         T2PossessionTime;                                  // 0x0980(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Score;                                           // 0x0984(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Passes;                                          // 0x0988(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Assists;                                         // 0x098C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Shots;                                           // 0x0990(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1TKLs;                                            // 0x0994(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1INTs;                                            // 0x0998(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1GoalKicks;                                       // 0x099C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Corners;                                         // 0x09A0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1ThrowIns;                                        // 0x09A4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1FreeKicks;                                       // 0x09A8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Penalties;                                       // 0x09AC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1Fouls;                                           // 0x09B0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1OffSides;                                        // 0x09B4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1YellowCards;                                     // 0x09B8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1RedCards;                                        // 0x09BC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1DoubleTouch;                                     // 0x09C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1SPTOs;                                           // 0x09C4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Passes;                                          // 0x09C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Assists;                                         // 0x09CC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Shots;                                           // 0x09D0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2TKLs;                                            // 0x09D4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2INTs;                                            // 0x09D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2GoalKicks;                                       // 0x09DC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Corners;                                         // 0x09E0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2ThrowIns;                                        // 0x09E4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2FreeKicks;                                       // 0x09E8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Penalties;                                       // 0x09EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2Fouls;                                           // 0x09F0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2OffSides;                                        // 0x09F4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2YellowCards;                                     // 0x09F8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2RedCards;                                        // 0x09FC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2DoubleTouch;                                     // 0x0A00(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2SPTOs;                                           // 0x0A04(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerState_C*                      T1VotingPlayer;                                    // 0x0A08(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   T1VoteState;                                       // 0x0A10(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	int32                                         T1VoteType;                                        // 0x0A28(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1YesVotes;                                        // 0x0A2C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T1NoVotes;                                         // 0x0A30(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          T1VoteCoolDown;                                    // 0x0A34(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F4[0x3];                                     // 0x0A35(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PlayerState_C*                      T2VotingPlayer;                                    // 0x0A38(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   T2VoteState;                                       // 0x0A40(0x0018)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	int32                                         T2VoteType;                                        // 0x0A58(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2YesVotes;                                        // 0x0A5C(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         T2NoVotes;                                         // 0x0A60(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          T2VoteCooldown;                                    // 0x0A64(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F5[0x3];                                     // 0x0A65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<int32, struct FTeamFormation>            Ninev9_Formations;                                 // 0x0A68(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            One0v10_Formations;                                // 0x0AB8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<int32, struct FTeamFormation>            One1v11_Formations;                                // 0x0B08(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UVaRestRequestJSON*                     VaRestRequest;                                     // 0x0B58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FString>                         HostIDs;                                           // 0x0B60(0x0010)(Edit, BlueprintVisible, Net, DisableEditOnInstance)
	int32                                         RedCardLength;                                     // 0x0B70(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CaptainRolesAllowed;                               // 0x0B74(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CoachRolesAllowed;                                 // 0x0B75(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22F6[0x2];                                     // 0x0B76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AMP_PlayerState_C*                      SwapPlayer1;                                       // 0x0B78(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMP_PlayerState_C*                      SwapPlayer2;                                       // 0x0B80(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MP_GameState(int32 EntryPoint);
	void RedCardTick();
	void AllRecieveSwapMessage(int32 Team, const class FString& PlayerName, int32 Position, const class FString& SwappingPlayerName, int32 SwappingPlayerTeam, int32 SwappingPlayerPosition);
	void AllRecieveRedCardMessage(int32 Team, const class FString& PlayerName);
	void AllRecieveYellowCardMessage(int32 Team, const class FString& PlayerName);
	void GameLiftServer_AcceptPlayerSession(const class FString& PlayerSessionId);
	void AllRecieveTeamChangeMessage(int32 Team, int32 Position, const class FString& PlayerName);
	void AllRecieveSystemMessage(const class FString& Message);
	void InitializePlayerServer(const class FString& SteamID, const class FString& PlayerSessionId, class ASP_Controller_C* SP_Controller, const struct FSP_PlayerAppearance& SP_PlayerAppearance);
	void RemovePlayer(class ASP_Controller_C* SP_Controller);
	void AddPlayer(const class ASP_Controller_C*& SP_Controller);
	void Set_WinningTeam(int32 Param_WinningTeam);
	void Set_MatchTimeVariables(float Param_TotalMatchSeconds, float Param_MatchSeconds, int32 Param_MatchMinutes, float Team1PossessionTime, float Team2PossessionTime);
	void CheckShutdownLoop();
	void CheckShutdown();
	void GameliftServer_RemovePlayerSession(const class FString& PlayerSessionId);
	void AddPlayerToBanList(const class FString& SteamID);
	void CheckHostMigration();
	void AddSpectator(const class AMP_PlayerState_C*& Spectator);
	void ReceiveBeginPlay();
	void CalculateGameMode();
	void CheckGkPossesion();
	void BenchAllPlayers(class ASP_Controller_C* SP_Controller);
	void CheckMatchStart();
	void Reset_RedCards();
	void TriggerRedCard(int32 Team, int32 Position, const class AMP_PlayerState_C*& Item);
	void UpdateTeamCharacters();
	void AllRecievePlayerMessage(class AMP_PlayerState_C* MP_PlayerState, const class FString& MessageGroup, const class FString& Message);
	void AllUpdateAppearance();
	void MP_CPTMinusInitiateSwap(class AMP_PlayerState_C* MP_PlayerState, const class FString& OnestSteamID, const class FString& TwondSteamID, int32 EmptyPosition);
	void MP_CPTMinusKickPlayerFromTeam(class AMP_PlayerState_C* MP_PlayerState, const class FString& SteamID);
	void MP_CPTMinusSetSubstituteSlots(class AMP_PlayerState_C* MP_PlayerState, int32 SubSlots);
	void StartT2CoachVote(class AMP_PlayerState_C* RequestingPlayer);
	void StartT1CoachVote(class AMP_PlayerState_C* RequestingPlayer);
	void MPMinusSendSwapRequest(class AMP_PlayerState_C* SwapRequester, const class FString& PlayerSessionId, bool CPT_Swap_);
	void StartT2VoteTimer();
	void StartT1VoteTimer();
	void MP_CPTMinusImportCustomTeam(class AMP_PlayerState_C* MP_PlayerState, const struct FTeamInfo& TeamInfo, const struct FSP_TeamAppearance& TeamAppearance, const struct FSP_TeamAppearance& GkAppearance);
	void MP_CPTMinusChangeFormation(class AMP_PlayerState_C* MP_PlayerState, int32 Selection);
	void StartT2VoteCoolDown();
	void StartT1VoteCoolDown();
	void CoachVote(class AMP_PlayerState_C* MP_PlayerState, int32 CoachTeam);
	void PlayerVoteNo(class AMP_PlayerState_C* MP_PlayerState);
	void PlayerVoteYes(class AMP_PlayerState_C* MP_PlayerState);
	void T2VoteNo(class AMP_PlayerState_C* MP_PlayerState);
	void T2VoteYes(class AMP_PlayerState_C* MP_PlayerState);
	void StartT2CaptainVote(class AMP_PlayerState_C* RequestingPlayer);
	void T1VoteNo(class AMP_PlayerState_C* MP_PlayerState);
	void T1VoteYes(class AMP_PlayerState_C* MP_PlayerState);
	void StartT1CaptainVote(class AMP_PlayerState_C* RequestingPlayer);
	void AddTeam2Shot();
	void AddTeam1Shot();
	void AddTeam2INT();
	void AddTeam1INT();
	void Set_TeammateLastDefenderX(float Param_TeamMateLastDefenderX);
	void AddTeam2SPTO();
	void AddTeam1SPTO();
	void AddTeam2DoubleTouch();
	void AddTeam1DoubleTouch();
	void AddTeam2RedCard();
	void AddTeam1RedCard();
	void AddTeam2YellowCard();
	void AddTeam1YellowCard();
	void AddTeam2Offsides();
	void AddTeam1Offsides();
	void AddTeam2Foul();
	void AddTeam1Foul();
	void AddTeam2Penalty();
	void AddTeam1Penalty();
	void AddTeam2FreeKick();
	void AddTeam1FreeKick();
	void AddTeam2ThrowIn();
	void AddTeam1ThrowIn();
	void AddTeam2Corner();
	void AddTeam1Corner();
	void AddTeam2GoalKick();
	void AddTeam1GoalKick();
	void AddTeam2TKL();
	void AddTeam1TKL();
	void AddTeam2Assist();
	void AddTeam1Assist();
	void AddTeam2Pass();
	void AddTeam1Pass();
	void ResetTeamStats();
	void MP_HostMinusSetRedCardLength(class ASP_Controller_C* SP_Controller, int32 Param_RedCardLength);
	void MP_HostMinusSetCaptainRolesEnabled(class ASP_Controller_C* SP_Controller, bool Param_CaptainRolesAllowed);
	void MP_HostMinusSetCoachRolesEnabled(class ASP_Controller_C* SP_Controller, bool Param_CoachRolesAllowed);
	void MP_HostMinusGiveHost(class ASP_Controller_C* SP_Controller, class AMP_PlayerState_C* Player);
	void MP_HostMinusBanPlayer(class ASP_Controller_C* SP_Controller, class AMP_PlayerState_C* MP_PlayerState);
	void MP_HostMinusKickPlayer(class ASP_Controller_C* SP_Controller, class AMP_PlayerState_C* Player);
	void MP_HostMinusForceSpectate(class ASP_Controller_C* SP_Controller, class AMP_PlayerState_C* Player);
	void UnmutePlayer(class ASP_Controller_C* SP_Controller, class AMP_PlayerState_C* Player);
	void MP_HostMinusSetAutoStart(class ASP_Controller_C* SP_Controller, bool Param_AutoStart);
	void MP_HostMinusSetSingleKeeper(class ASP_Controller_C* SP_Controller, bool Param_SingleKeeper);
	void MP_HostMinusSetOvertimeMode(class ASP_Controller_C* SP_Controller, int32 OvertimeMode);
	void MP_HostMinusSet1stPersonOnly(class ASP_Controller_C* SP_Controller, bool Param_OnestPersonOnly);
	void MP_HostMinusSetMatchLength(class ASP_Controller_C* SP_Controller, int32 Param_MatchLength);
	void MP_HostMinusSetTeamSize(class ASP_Controller_C* SP_Controller, int32 Param_TeamSize);
	void MP_HostMinusForceResetMatch(class ASP_Controller_C* SP_Controller);
	void MP_HostMinusForceStartMatch(class ASP_Controller_C* SP_Controller);
	void CalculateFormationChange(int32 Selection, struct FTeamFormation* Formation);
	void CalculatePlayerSwapPositions(class AMP_PlayerState_C* Player1, class AMP_PlayerState_C* Player2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MP_GameState_C">();
	}
	static class AMP_GameState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMP_GameState_C>();
	}
};

}

